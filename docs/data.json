{
    "project": {
        "version": "0.1.0",
        "name": "xc",
        "description": "X-Canvas API.",
        "url": "http://www.createjs.com/#!/EaselJS",
        "logo": "http://createjs.com/resources/SuiteIcons/EaselJS/docs-icon-EaselJS.png"
    },
    "files": {
        "..\\src\\core\\class.js": {
            "name": "..\\src\\core\\class.js",
            "modules": {},
            "classes": {
                "xc.class": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\core\\module.js": {
            "name": "..\\src\\core\\module.js",
            "modules": {},
            "classes": {
                "xc.module": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\core\\package.js": {
            "name": "..\\src\\core\\package.js",
            "modules": {
                "xc.core": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "modules": {
                "xc.createjs.easeljs": 1
            },
            "classes": {
                "Bitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "modules": {},
            "classes": {
                "BitmapAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Container.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "modules": {},
            "classes": {
                "Container": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "modules": {},
            "classes": {
                "DisplayObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "modules": {},
            "classes": {
                "Command": 1,
                "Graphics": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "modules": {},
            "classes": {
                "MovieClip": 1,
                "MovieClipPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "modules": {},
            "classes": {
                "Shadow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "modules": {},
            "classes": {
                "Shape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "modules": {},
            "classes": {
                "SpriteSheet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\display\\Text.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "modules": {},
            "classes": {
                "Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "modules": {},
            "classes": {
                "EventDispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "modules": {},
            "classes": {
                "MouseEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "modules": {},
            "classes": {
                "AlphaMapFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "modules": {},
            "classes": {
                "AlphaMaskFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "modules": {},
            "classes": {
                "BoxBlurFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "modules": {},
            "classes": {
                "ColorFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "modules": {},
            "classes": {
                "ColorMatrix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js",
            "modules": {},
            "classes": {
                "ColorMatrixFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "modules": {},
            "classes": {
                "Filter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "modules": {},
            "classes": {
                "Matrix2D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "modules": {},
            "classes": {
                "Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "modules": {},
            "classes": {
                "Rectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "modules": {},
            "classes": {
                "Touch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "modules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "modules": {},
            "classes": {
                "SpriteSheetBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "modules": {},
            "classes": {
                "SpriteSheetUtils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "modules": {},
            "classes": {
                "Ticker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js": {
            "name": "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js",
            "modules": {},
            "classes": {
                "UID": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js": {
            "name": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "modules": {
                "xc.createjs.soundjs": 1
            },
            "classes": {
                "TagPool": 1,
                "HTMLAudioLoader": 1,
                "HTMLAudioPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\soundjs\\Sound.js": {
            "name": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "modules": {},
            "classes": {
                "Sound": 1,
                "SoundChannel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js": {
            "name": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "modules": {},
            "classes": {
                "SoundInstance": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js": {
            "name": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "modules": {},
            "classes": {
                "WebAudioLoader": 1,
                "WebAudioPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js": {
            "name": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "modules": {
                "xc.createjs.tweenjs": 1
            },
            "classes": {
                "CSSPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\tweenjs\\Ease.js": {
            "name": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "modules": {},
            "classes": {
                "Ease": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js": {
            "name": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "modules": {},
            "classes": {
                "MotionGuidePlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\tweenjs\\Timeline.js": {
            "name": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "modules": {},
            "classes": {
                "Timeline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\tweenjs\\Tween.js": {
            "name": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "modules": {},
            "classes": {
                "Tween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\lib\\createjs\\package.js": {
            "name": "..\\src\\lib\\createjs\\package.js",
            "modules": {
                "xc.createjs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\src\\xc.js": {
            "name": "..\\src\\xc.js",
            "modules": {
                "xc": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "xc.core": {
            "name": "xc.core",
            "submodules": {},
            "classes": {
                "xc.class": 1,
                "xc.module": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\core\\module.js",
            "line": 1
        },
        "xc.createjs.easeljs": {
            "name": "xc.createjs.easeljs",
            "submodules": {},
            "classes": {
                "Bitmap": 1,
                "BitmapAnimation": 1,
                "Container": 1,
                "DisplayObject": 1,
                "Command": 1,
                "Graphics": 1,
                "MovieClip": 1,
                "MovieClipPlugin": 1,
                "Shadow": 1,
                "Shape": 1,
                "SpriteSheet": 1,
                "Stage": 1,
                "Text": 1,
                "EventDispatcher": 1,
                "MouseEvent": 1,
                "AlphaMapFilter": 1,
                "AlphaMaskFilter": 1,
                "BoxBlurFilter": 1,
                "ColorFilter": 1,
                "ColorMatrix": 1,
                "ColorMatrixFilter": 1,
                "Filter": 1,
                "Matrix2D": 1,
                "Point": 1,
                "Rectangle": 1,
                "Touch": 1,
                "Log": 1,
                "SpriteSheetBuilder": 1,
                "SpriteSheetUtils": 1,
                "Ticker": 1,
                "UID": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js",
            "line": 3,
            "description": "The EaselJS Javascript library provides a retained graphics mode for canvas including a full hierarchical display\nlist, a core interaction model, and helper classes to make working with 2D graphics in Canvas much easier.\nEaselJS provides straight forward solutions for working with rich graphics and interactivity with HTML5 Canvas...\n\n<h4>Getting Started</h4>\nTo get started with Easel, create a {{#crossLink \"Stage\"}}{{/crossLink}} that wraps a CANVAS element, and add\n{{#crossLink \"DisplayObject\"}}{{/crossLink}} instances as children.\n\nEaselJS supports:\n<ul>\n <li>Images using {{#crossLink \"Bitmap\"}}{{/crossLink}}</li>\n <li>Vector graphics using {{#crossLink \"Shape\"}}{{/crossLink}} and {{#crossLink \"Graphics\"}}{{/crossLink}}</li>\n <li>Animated bitmaps using {{#crossLink \"SpriteSheet\"}}{{/crossLink}} and {{#crossLink \"BitmapAnimation\"}}{{/crossLink}}\n <li>Simple text instances using {{#crossLink \"Text\"}}{{/crossLink}}</li>\n <li>Containers that hold other DisplayObjects using {{#crossLink \"Container\"}}{{/crossLink}}</li>\n</ul>\n\nAll display objects can be added to the stage as children, or drawn to a canvas directly.\n\n<b>User Interactions</b><br/>\nAll display objects on stage will dispatch events when interacted with using a mouse or touch.\nEaselJS supports hover, press, and release events, as well as an easy-to-use drag-and-drop model. Check out\n{{#crossLink \"MouseEvent\"}}{{/crossLink}} for more information.\n\n<h4>Simple Example</h4>\nThis example illustrates how to create and position a {{#crossLink \"Shape\"}}{{/crossLink}} on the {{#crossLink \"Stage\"}}{{/crossLink}}\nusing EaselJS' drawing API.\n\n    // Create a stage by getting a reference to the canvas\n    var stage = new Stage(\"demoCanvas\");\n    // Create a Shape DisplayObject.\n    var circle = new Shape();\n    circle.graphics.beginFill(\"red\").drawCircle(0, 0, 40);\n    // Set position of Shape instance.\n    circle.x = circle.y = 50;\n    // Add Shape instance to stage display list.\n    stage.addChild(circle);\n    // Update stage will render next frame\n    stage.update();\n\n<b>Simple Animation Example</b><br/>\nThis example moves the shape created in the previous demo across the screen.\n\n    // Update stage will render next frame\n    Ticker.addEventListener(\"tick\", handleTick);\n\n    function handleTick() {\n        // Circle will move 10 units to the right.\n        circle.x += 10;\n        // Will cause the circle to wrap back\n        if (circle.x > stage.canvas.width) { circle.x = 0; }\n        stage.update();\n    }\n\n<h4>Other Features</h4>\nEaselJS also has built in support for\n<ul>\n <li>Canvas features such as {{#crossLink \"Shadow\"}}{{/crossLink}} and CompositeOperation</li>\n <li>{{#crossLink \"Ticker\"}}{{/crossLink}}, a global heartbeat that objects can subscribe to</li>\n <li>Filters, including a provided {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}},\n     {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}},\n     {{#crossLink \"AlphaMapFilter\"}}{{/crossLink}},\n     and {{#crossLink \"BoxBlurFilter\"}}{{/crossLink}}.\n     See {{#crossLink \"Filter\"}}{{/crossLink}} for more information</li>\n <li>A {{#crossLink \"ButtonHelper\"}}{{/crossLink}} utility, to easily create interactive buttons</li>\n <li>{{#crossLink \"SpriteSheetUtils\"}}{{/crossLink}} and a {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}} to help\n     build and manage {{#crossLink \"SpriteSheet\"}}{{/crossLink}} functionality at run-time.</li>\n</ul>"
        },
        "xc.createjs.soundjs": {
            "name": "xc.createjs.soundjs",
            "submodules": {},
            "classes": {
                "TagPool": 1,
                "HTMLAudioLoader": 1,
                "HTMLAudioPlugin": 1,
                "Sound": 1,
                "SoundChannel": 1,
                "SoundInstance": 1,
                "WebAudioLoader": 1,
                "WebAudioPlugin": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 350,
            "description": "The SoundJS library manages the playback of audio on the web. It works via plugins which abstract the actual audio\nimplementation, so playback is possible on any platform without specific knowledge of what mechanisms are necessary\nto play sounds.\n\nTo use SoundJS, use the public API on the {{#crossLink \"Sound\"}}{{/crossLink}} class. This API is for:\n<ul>\n <li>Installing Plugins</li>\n <li>Registering sounds</li>\n <li>Playing sounds</li>\n <li>Controlling all sounds volume, mute, and stopping everything</li>\n</ul>\n\n<b>Controlling Sounds</b><br/>\nPlaying sounds creates {{#crossLink \"SoundInstance\"}}{{/crossLink}} instances, which can be controlled individually.\n<ul>\n <li>Pause, resume, and stop sounds</li>\n <li>Control a sound's volume, mute, and pan</li>\n <li>Add events to sound instances to get notified when they finish, loop, or fail</li>\n</ul>\n\n<h4>Feature Set Example</h4>\n    Sound.addEventListener(\"loadComplete\", Sound.proxy(this.loadHandler, this));\n    Sound.registerSound(\"path/to/mySound.mp3|path/to/mySound.ogg\", \"sound\");\n    function loadHandler(event) {\n        // This is fired for each sound that is registered.\n        var instance = Sound.play(\"sound\");  // play using id. Could also use source.\n        instance.addEventListener(\"playComplete\", Sound.proxy(this.handleComplete, this));\n        instance.setVolume(0.5);\n    }"
        },
        "xc.createjs.tweenjs": {
            "name": "xc.createjs.tweenjs",
            "submodules": {},
            "classes": {
                "CSSPlugin": 1,
                "Ease": 1,
                "MotionGuidePlugin": 1,
                "Timeline": 1,
                "Tween": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 9,
            "description": "The TweenJS Javascript library provides a simple but powerful tweening interface. It supports tweening of both\nnumeric object properties & CSS style properties, and allows you to chain tweens and actions together to create\ncomplex sequences.\n\n<h4>Simple Tween</h4>\nThis tween will tween the target's alpha property from 0 to 1 for 1s then call the <code>onComplete</code> function.\n\n    target.alpha = 0;\n    Tween.get(target).to({alpha:1}, 1000).call(onComplete);\n    function onComplete() {\n        // Tween complete\n    }\n\n<h4>Chainable Tween</h4>\nThis tween will wait 0.5s, tween the target's alpha property to 0 over 1s, set it's visible to false, then call the\n<code>onComplete</code> function.\n\n    target.alpha = 1;\n    Tween.get(target).wait(500).to({alpha:0, visible:false}, 1000).call(onComplete);\n    function onComplete() {\n        // Tween complete\n    }"
        },
        "xc.createjs": {
            "name": "xc.createjs",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\lib\\createjs\\package.js",
            "line": 1
        },
        "xc": {
            "name": "xc",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\src\\xc.js",
            "line": 1
        }
    },
    "classes": {
        "xc.class": {
            "name": "xc.class",
            "shortname": "xc.class",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.core",
            "file": "..\\src\\core\\class.js",
            "line": 1,
            "description": "参考：http://ejohn.org/blog/simple-javascript-inheritance/\n\nxc.class 提供一个简单、直观的 JavaScript 继承写法。\n\nJavaScript 中没有类的概念，继承是通过 prototype 来实现的，标准的写法是这样：\n\n    var Person = function(name) {\n        this.name = name;\n    }\n\n    // 在 prototype 中定义的属性和方法，每个 Person 实例都能访问\n    Persion.prototype = {\n        getName: function() {\n            return this.name;\n        },\n        setName: function(name) {\n            this.name = name;\n        }\n    }\n    var zhansan = new Person(\"张三\");\n    console.log(zhansan.getName()); // 输出：张三\n\n    var Employee(name, employeeId) {\n        this.name = name;\n        this.employeeId = employeeId;\n    }\n\n    // Employee 继承 Person\n    Employee.prototype = new Person();\n    Employee.prototype.getEmployeeId = function() {\n        return this.employeeId;\n    }\n\n    var lisi = new Employee(\"李四\", 1);\n    console.log(lisi.getName());       // 输出：李四\n    console.log(lisi.getEmployeeId()); // 输出：1\n\n标准的写法其实没什么不好，只是写起来有点繁琐。如果采用 xc.class，可以这样写：\n\n    // 定义 Person 类\n    var Person = xc.class.create({\n        _init: function(name) {\n            this.name = name;\n        },\n        getName: function() {\n            return this.name;\n        },\n        setName: function(name) {\n            this.name = name;\n        }\n    });\n\n    // 定义 Employee 类，继承 Person\n    var Employee = Person.extend({\n        _init: function(name, employeeId) {\n            this._super(name);\n            this.employeeId = employeeId;\n        },\n        getEmployeeId: function() {\n            return this.getEmployeeId;\n        }\n    });\n\n采用这种写法有 3 个好处：\n<ul>\n <li>单个类的属性和方法在一个 {} 中完成定义，类的继承方式更加直观。</li>\n <li>提供一个 _init 方法，更易于理解为“构造函数”。</li>\n <li>提供一个 _super 方法，用于访问基类的同名方法。重载父类方法时经常需要用到此方法。</li>\n</ul>\n\n注意：xc.class 并没有改变 JavaScript 的继承原理，只是提供一个更方便，更直观的继承写法。"
        },
        "xc.module": {
            "name": "xc.module",
            "shortname": "xc.module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.core",
            "file": "..\\src\\core\\module.js",
            "line": 1,
            "description": "xc.module 提供一个简单的模块定义方法。\n\n写法如下：\n\n    xc.module.define(\"core.AbstractClass\", function(exports) {\n        var AbstractClass = xc.class.create({ ... });\n        return AbstractClass;\n    }\n\n    xc.module.define(\"all.types\", function(exports) {\n        var AbstractClass = xc.module.require(\"core.AbstractClass\");\n        exports.NewClass = AbstractClass.extend({ ... });\n        exports.NewClass2 = AbstractClass.extend({ ... });\n    }\n\n采用这种写法有 2 个好处：\n<ul>\n <li>模块代码在一个函数闭包中定义，可减少全局变量污染。</li>\n <li>模块代码在被 require 时才真正执行，可提升页面加载速度。</li>\n</ul>"
        },
        "Bitmap": {
            "name": "Bitmap",
            "shortname": "Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 78,
            "description": "A Bitmap represents an Image, Canvas, or Video in the display list.\nA Bitmap can be instantiated using an existing HTML element, or a string.\n\n<h4>Example</h4>\n    var bitmap = new Bitmap(\"imagePath.jpg\");\n\nNote: When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\nwill be displayed.",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageOrUri",
                    "description": "The source object or URI to an image to\n display. This can be either an Image, Canvas, or Video object, or a string URI to an image file to load and use.\n If it is a URI, a new Image object will be constructed and assigned to the .image property.",
                    "type": "Image | HTMLCanvasElement | HTMLVideoElement | String"
                }
            ]
        },
        "BitmapAnimation": {
            "name": "BitmapAnimation",
            "shortname": "BitmapAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 5,
            "description": "Displays frames or sequences of frames (ie. animations) from a sprite sheet image. A sprite sheet is a series of\nimages (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\nimages could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual\nframes, play frames as an animation, and even sequence animations together.\n\nSee the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\n<h4>Example</h4>\n    var instance = new BitmapAnimation(spriteSheet);\n    instance.gotoAndStop(\"frameName\");",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The SpriteSheet instance to play back. This includes the source image(s), frame\n dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.",
                    "type": "SpriteSheet"
                }
            ]
        },
        "Container": {
            "name": "Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 5,
            "description": "A Container is a nestable display list that allows you to work with compound display elements. For example you\ncould group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person\nContainer, and transform them as a group, while still being able to move the individual parts relative to each\nother. Children of containers have their <code>transform</code> and <code>alpha</code> properties concatenated with\ntheir parent Container.\n\nFor example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\nand <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\nContainers have some overhead, so you generally shouldn't create a Container to hold a single child.\n\n<h4>Example</h4>\n    var container = new Container();\n    container.addChild(bitmapInstance, shapeInstance);\n    container.x = 100;",
            "extends": "DisplayObject",
            "is_constructor": 1
        },
        "DisplayObject": {
            "name": "DisplayObject",
            "shortname": "DisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 8,
            "description": "DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n{{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\nDisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\nmethods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\ncaching, and mouse handlers.",
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Command": {
            "name": "Command",
            "shortname": "Command",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 3,
            "description": "Inner class used by the {{#crossLink \"Graphics\"}}{{/crossLink}} class.\nUsed to create the instruction lists used in Graphics.",
            "access": "protected",
            "tagname": "",
            "is_constructor": 1
        },
        "Graphics": {
            "name": "Graphics",
            "shortname": "Graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 24,
            "description": "The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\nspecified context. Note that you can use Graphics without any dependency on the Easel framework by calling\n{{#crossLink \"DisplayObject/draw\"}}{{/crossLink}} directly, or it can be used with the\n{{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the context of an Easel display list.\n\n<h4>Example</h4>\n    var g = new Graphics();\n    g.setStrokeStyle(1);\n    g.beginStroke(Graphics.getRGB(0,0,0));\n    g.beginFill(Graphics.getRGB(255,0,0));\n    g.drawCircle(0,0,3);\n\n    var s = new Shape(g);\n    s.x = 100;\n    s.y = 100;\n\n    stage.addChild(s);\n    stage.update();\n\nNote that all drawing methods in Graphics return the Graphics instance, so they can be chained together.\nFor example, the following line of code would generate the instructions to draw a rectangle with a red stroke and\nblue fill, then render it to the specified context2D:\n\n    myGraphics.beginStroke(\"#F00\").beginFill(\"#00F\").drawRect(20, 20, 100, 50).draw(myContext2D);\n\n<h4>Tiny API</h4>\nThe Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\nGraphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\nto generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\ndescriptions in the docs.\n\n<table>\n <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n <tr><td>at</td><td>{{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n <td>ss</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} </td></tr>\n <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n</table>\n\nHere is the above example, using the tiny API instead.\n\n    myGraphics.s(\"#F00\").f(\"#00F\").r(20, 20, 100, 50).draw(myContext2D);",
            "is_constructor": 1
        },
        "MovieClip": {
            "name": "MovieClip",
            "shortname": "MovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 8,
            "description": "The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}.\nIt allows you to create objects which encapsulate timeline animations, state changes, and synched actions.\nDue to the complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and\nis not included in the main EaselJS library.\n\nCurrently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\nbeen made to support time-based timelines in the future.",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mode",
                    "description": "Initial value for the mode property. One of MovieClip.INDEPENDENT, MovieClip.SINGLE_FRAME,\n or MovieClip.SYNCHED.",
                    "type": "String"
                },
                {
                    "name": "startPosition",
                    "description": "Initial value for the startPosition property.",
                    "type": "Number"
                },
                {
                    "name": "loop",
                    "description": "Initial value for the loop property.",
                    "type": "Boolean"
                },
                {
                    "name": "labels",
                    "description": "A hash of labels to pass to the timeline instance associated with this MovieClip.",
                    "type": "Object"
                }
            ]
        },
        "MovieClipPlugin": {
            "name": "MovieClipPlugin",
            "shortname": "MovieClipPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 381,
            "description": "This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\nproperty from tweening.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1
        },
        "Shadow": {
            "name": "Shadow",
            "shortname": "Shadow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 3,
            "description": "This class encapsulates the properties required to define a shadow to apply to a\n{{#crossLink \"DisplayObject\"}}{{/crossLink}} via it's <code>shadow</code> property.\n\n<h4>Example</h4>\n    myImage.shadow = new Shadow(\"#000000\", 5, 5, 10);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "color",
                    "description": "The color of the shadow.",
                    "type": "String"
                },
                {
                    "name": "offsetX",
                    "description": "The x offset of the shadow in pixels.",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "The y offset of the shadow in pixels.",
                    "type": "Number"
                },
                {
                    "name": "blur",
                    "description": "The size of the blurring effect.",
                    "type": "Number"
                }
            ]
        },
        "Shape": {
            "name": "Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 6,
            "description": "A Shape allows you to display vector art in the display list.\nIt composites a {{#crossLink \"Graphics\"}}{{/crossLink}} instance which exposes all of the vector drawing methods.\nThe Graphics instance can be shared between multiple Shape instances to display the same vector graphics with\ndifferent positions or transforms.\n\nIf the vector art will not change between draws, you may want to use the\n{{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the rendering cost.\n\n<h4>Example</h4>\n    var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n    var shape = new Shape(graphics);\n\n    // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n    var shape = new Shape();\n    shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "graphics",
                    "description": "Optional. The graphics instance to display. If null, a new Graphics instance will be created.",
                    "type": "Graphics"
                }
            ]
        },
        "SpriteSheet": {
            "name": "SpriteSheet",
            "shortname": "SpriteSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 6,
            "description": "Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images\n(usually animation frames) combined into a larger image (or images). For example, an animation consisting of eight\n100x100 images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\nThe data passed to the SpriteSheet constructor defines three critical pieces of information:\n<ol>\n <li>The image or images to use.</li>\n <li>The positions of individual image frames. This data can be represented in one of two ways:\n     As a regular grid of sequential, equal-sized frames, or as individually defined, variable sized frames\n     arranged in an irregular (non-sequential) fashion.</li>\n <li>Likewise, animations can be represented in two ways: As a series of sequential frames, defined by a start and\n     end frame [0,3], or as a list of frames [0,1,2,3].</li>\n</ol>\n\n<h4>SpriteSheet Format</h4>\n\n    data = {\n\n        // DEFINING IMAGES:\n        // list of images or image URIs to use. SpriteSheet can handle preloading.\n        // the order dictates their index value for frame definition.\n        images: [image1, \"path/to/image2.png\"],\n\n        // DEFINING FRAMES:\n        // the simple way to define frames, only requires frame size because frames are consecutive:\n        // define frame width/height, and optionally the frame count and registration point x/y.\n        // if count is omitted, it will be calculated automatically based on image dimensions.\n        frames: {width:64, height:64, count:20, regX: 32, regY:64},\n\n        // OR, the complex way that defines individual rects for frames.\n        // The 5th value is the image index per the list defined in \"images\" (defaults to 0).\n        frames: [\n            // x, y, width, height, imageIndex, regX, regY\n            [0,0,64,64,0,32,64],\n            [64,0,96,64,0]\n        ],\n\n        // DEFINING ANIMATIONS:\n\n        // simple animation definitions. Define a consecutive range of frames.\n        // also optionally define a \"next\" animation name for sequencing.\n        // setting next to false makes it pause when it reaches the end.\n        animations: {\n             // start, end, next, frequency\n             run: [0,8],\n             jump: [9,12,\"run\",2],\n             stand: 13\n        }\n\n        // the complex approach which specifies every frame in the animation by index.\n        animations: {\n            run: {\n                frames: [1,2,3,3,2,1]\n            },\n            jump: {\n                frames: [1,4,5,6,1],\n                next: \"run\",\n                frequency: 2\n            },\n            stand: { frames: [7] }\n        }\n\n        // the above two approaches can be combined, you can also use a single frame definition:\n        animations: {\n            run: [0,8,true,2],\n            jump: {\n                frames: [8,9,10,9,8],\n                next: \"run\",\n                frequency: 2\n            },\n            stand: 7\n        }\n    }\n\n<h4>Example</h4>\nTo define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with two\nanimations, \"run\" looping from frame 0-4 inclusive, and \"jump\" playing from frame 5-8 and sequencing back to run:\n\n    var data = {\n        images: [\"sprites.jpg\"],\n        frames: {width:50, height:50},\n        animations: {run:[0,4], jump:[5,8,\"run\"]}\n    };\n    var animation = new BitmapAnimation(data);\n    animation.gotoAndPlay(\"run\");",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ]
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 6,
            "description": "A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list.\nEach time its {{#crossLink \"Stage/tick\"}}{{/crossLink}} method is called, it will render its display list to its\ntarget canvas.\n\n<h4>Example</h4>\nThis example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the\nchild and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\n    var stage = new Stage(\"canvasElementId\");\n    var image = new Bitmap(\"imagePath.png\");\n    Ticker.addEventListener(\"tick\", handleTick);\n    function handleTick(event) {\n        bitmap.x += 10;\n        stage.update();\n    }",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "A canvas object that the Stage will render to, or the string id\n of a canvas object in the current document.",
                    "type": "HTMLCanvasElement | String | Object"
                }
            ]
        },
        "Text": {
            "name": "Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 5,
            "description": "Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\nlineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position\nHTML text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\nmethod, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\n<b>Please note that Text does not support HTML text, and can only display one font style at a time.</b>\nTo use multiple font styles, you will need to create multiple text instances, and position them manually.\n\n<h4>Example</h4>\n    var text = new Text(\"Hello World\", \"20px Arial\", #ff7700\");\n    text.x = 100;\n    text.textBaseline = \"alphabetic\";\n\nCreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\nbefore it can be displayed.",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "The text to display.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "font",
                    "description": "The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n 36px Arial\").",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "color",
                    "description": "The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n \"#F00\", \"red\", or \"#FF0000\").",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "EventDispatcher": {
            "name": "EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Ticker"
            ],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 3,
            "description": "The EventDispatcher provides methods for managing prioritized queues of event listeners and dispatching events.\nAll {{#crossLink \"DisplayObject\"}}{{/crossLink}} classes dispatch events, as well as some of the utilities like\n{{#crossLink \"Ticker\"}}{{/crossLink}}.\n\nAdd an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n\n    instance.addEventListener(\"eventName\", handlerMethod);\n    function handlerMethod(event) {\n        console.log(event.target + \" Was Clicked\");\n    }\n\n<b>Maintaining proper scope</b><br/>\nWhen using EventDispatcher in a class, you may need to use <code>Function.bind</code> or another approach to\nmaintain you method scope. Note that Function.bind is not supported in some older browsers.\n\n    instance.addEventListener(\"click\", handleClick.bind(this));\n    function handleClick(event) {\n        console.log(\"Method called in scope: \" + this);\n    }\n\nPlease note that currently, EventDispatcher does not support event priority or bubbling. Future versions may add\nsupport for one or both of these features.",
            "is_constructor": 1
        },
        "MouseEvent": {
            "name": "MouseEvent",
            "shortname": "MouseEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 5,
            "description": "This is passed as the parameter to mousedown, mouseup, mousemove, stagemouseup, stagemousedown, mouseover, mouseout\nand click events on {{#crossLink \"DisplayObject\"}}{{/crossLink}} instances.",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "stageX",
                    "description": "The normalized x position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "stageY",
                    "description": "The normalized y position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "The display object this event relates to. Note that this will be overwritten when the event is dispatched via EventDispatcher.",
                    "type": "DisplayObject"
                },
                {
                    "name": "nativeEvent",
                    "description": "The native DOM event related to this mouse event.",
                    "type": "MouseEvent"
                },
                {
                    "name": "pointerID",
                    "description": "The unique id for the pointer.",
                    "type": "Number"
                },
                {
                    "name": "primary",
                    "description": "Indicates whether this is the primary pointer in a multitouch environment.",
                    "type": "Boolean"
                },
                {
                    "name": "rawX",
                    "description": "The raw x position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "rawY",
                    "description": "The raw y position relative to the stage.",
                    "type": "Number"
                }
            ]
        },
        "AlphaMapFilter": {
            "name": "AlphaMapFilter",
            "shortname": "AlphaMapFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "line": 5,
            "description": "Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\nbe copied from the red channel of the map, and the RGB channels will be copied from the target.\n\nGenerally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much better performance.\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "alphaMap",
                    "description": "The greyscale image (or canvas) to use as the alpha value for the result. This should be\n exactly the same dimensions as the target.",
                    "type": "Image"
                }
            ]
        },
        "AlphaMaskFilter": {
            "name": "AlphaMaskFilter",
            "shortname": "AlphaMaskFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "line": 5,
            "description": "Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\nbe derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\napply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\nalpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\n<b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mask",
                    "description": "",
                    "type": "Image"
                }
            ]
        },
        "BoxBlurFilter": {
            "name": "BoxBlurFilter",
            "shortname": "BoxBlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 6,
            "description": "BoxBlurFilter applies a box blur to DisplayObjects\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "blurX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blurY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "quality",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorFilter": {
            "name": "ColorFilter",
            "shortname": "ColorFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 5,
            "description": "Applies color transforms.\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "redMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "greenMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blueMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alphaMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "redOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "greenOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blueOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alphaOffset",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorMatrix": {
            "name": "ColorMatrix",
            "shortname": "ColorMatrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 3,
            "description": "Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}},\nor can be used directly as the matrix for a ColorMatrixFilter. Most methods return the instance to facilitate\nchained calls.\n\n<h4>Example</h4>\n    myColorMatrix.adjustHue(20).adjustBrightness(50);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "is_constructor": 1,
            "extends": "Array",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorMatrixFilter": {
            "name": "ColorMatrixFilter",
            "shortname": "ColorMatrixFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js",
            "line": 5,
            "description": "Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n{{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors.\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters.",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "matrix",
                    "description": "A 4x5 matrix describing the color operation to perform. See also the ColorMatrix class.",
                    "type": "Array"
                }
            ]
        },
        "Filter": {
            "name": "Filter",
            "shortname": "Filter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "line": 5,
            "description": "Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\nthe {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n{{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n    myInstance.cache(0,0, 100, 100);\n    myInstance.filters = [\n        new ColorFilter(0, 0, 0, 1, 255, 0, 0),\n        new BoxBlurFilter(5, 5, 10)\n    ];\n\n<h4>EaselJS Filters</h4>\nEaselJS comes with a number of pre-built filters. Note that individual filters are not compiled into the minified\nversion of EaselJS. To use them, you must include them manually in the HTML.\n<ul>\n <li>AlphaMapFilter: Map a greyscale image to the alpha channel of a display object</li>\n <li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n <li>{{#crossLink \"BoxBlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n</ul>",
            "is_constructor": 1
        },
        "Matrix2D": {
            "name": "Matrix2D",
            "shortname": "Matrix2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 3,
            "description": "Represents an affine transformation matrix, and provides tools for constructing and concatenating matrixes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "a",
                    "description": "Specifies the a property for the new matrix.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "Specifies the b property for the new matrix.",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "Specifies the c property for the new matrix.",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "Specifies the d property for the new matrix.",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "Specifies the tx property for the new matrix.",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "Specifies the ty property for the new matrix.",
                    "type": "Number"
                }
            ]
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "line": 3,
            "description": "Represents a point on a 2 dimensional x / y coordinate system.\n\n<h4>Example</h4>\n    var point = new Point(0, 100);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "Rectangle": {
            "name": "Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 3,
            "description": "Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\n<h4>Example</h4>\n    var rect = new Rectangle(0, 0, 100, 100);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "width",
                    "description": "The width of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "Touch": {
            "name": "Touch",
            "shortname": "Touch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 5,
            "description": "Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\nmodern Android browser) and IE10.\n\nEnsure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application.\nNote that you do not have to check if touch is supported to enable it, as it will fail gracefully if it is not\nsupported.\n\n<h4>Example</h4>\n    var stage = new Stage(\"canvas\");\n    Touch.enable(stage);",
            "static": 1
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 3,
            "description": "Log provides a centralized system for outputting errors. By default it will attempt to use console.log\nto output messages, but this can be changed by setting the out property.",
            "is_constructor": 1
        },
        "SpriteSheetBuilder": {
            "name": "SpriteSheetBuilder",
            "shortname": "SpriteSheetBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 7,
            "description": "The SpriteSheetBuilder allows you to generate sprite sheets at run time from any display object. This can allow\nyou to maintain your assets as vector graphics (for low file size), and render them at run time as sprite sheets\nfor better performance.\n\nSprite sheets can be built either synchronously, or asynchronously, so that large sprite sheets can be generated\nwithout locking the UI.\n\nNote that the \"images\" used in the generated sprite sheet are actually canvas elements, and that they will be sized\nto the nearest power of 2 up to the value of <code>maxWidth</code> or <code>maxHeight</code>.",
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "SpriteSheetUtils": {
            "name": "SpriteSheetUtils",
            "shortname": "SpriteSheetUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 3,
            "description": "The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\nA sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\nexample, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\nby 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.",
            "static": 1
        },
        "Ticker": {
            "name": "Ticker",
            "shortname": "Ticker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 5,
            "description": "The Ticker provides  a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\nevent to be notified when a set time interval has elapsed.\n\nNote that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\nduring times of high CPU load. The Ticker class uses a static interface (ex. <code>Ticker.getPaused()</code>) and should not be\ninstantiated.\n\n<h4>Example</h4>\n    Ticker.addEventListener(\"tick\", handleTick);\n    function handleTick(event) {\n        // Actions carried out each frame\n    }",
            "static": 1,
            "uses": [
                "EventDispatcher"
            ]
        },
        "UID": {
            "name": "UID",
            "shortname": "UID",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.easeljs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js",
            "line": 3,
            "description": "Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\nand should not be instantiated.",
            "static": 1
        },
        "TagPool": {
            "name": "TagPool",
            "shortname": "TagPool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 39,
            "description": "The TagPool is an object pool for HTMLAudio tag instances. In Chrome, we have to pre-create the number of HTML\naudio tag instances that we are going to play before we load the data, otherwise the audio stalls.\n(Note: This seems to be a bug in Chrome)",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "HTMLAudioLoader": {
            "name": "HTMLAudioLoader",
            "shortname": "HTMLAudioLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 385,
            "description": "An internal helper class that preloads html audio via HTMLAudioElement tags.\nNote that this class and its methods are not documented properly to avoid generating HTML documentation.",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the sound to load.",
                    "type": "String"
                },
                {
                    "name": "tag",
                    "description": "The audio tag of the sound to load.",
                    "type": "HTMLAudioElement"
                }
            ],
            "is_constructor": 1,
            "access": "private",
            "tagname": ""
        },
        "HTMLAudioPlugin": {
            "name": "HTMLAudioPlugin",
            "shortname": "HTMLAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 487,
            "description": "Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\nby default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, which is supported on Chrome, Safari, and\niOS. This handles audio in all other modern browsers.\n\n<h4>Known Browser and OS issues for HTML Audio</h4>\n<b>All browsers</b><br/>\nTesting has shown in all browsers there is a limit to how many audio tag instances you are allowed. If you exceed\nthis limit, you can expect to see unpredictable results. This will be seen as soon as you register sounds, as\ntags are precreated to all Chrome to load them. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\na guide to how many total audio tags you can safely use in all browsers.\n\n<b>IE 9 html audio quirk</b><br/>\nNote in IE 9 there is a delay in applying volume changes to tags that occurs once playback is started. So if you have\nmuted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\nwhen or how you apply the volume change, as the tag seems to need to play to apply it.\n\n<b>iOS 6 limitations</b><br/>\nNote it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+). HTML Audio can only\nhave one &lt;audio&gt; tag, can not preload or autoplay the audio, can not cache the audio, and can not play the\naudio except inside a user initiated event.\n\n<b>Android limitations</b><br/>\n<ul>\n <li>We have no control over audio volume. Only the user can set volume on their device.</li>\n <li>We can only play audio inside a user event (touch).  This currently means you cannot loop sound.</li>\n</ul>\n\nSee {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.",
            "is_constructor": 1
        },
        "Sound": {
            "name": "Sound",
            "shortname": "Sound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 5,
            "description": "The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\nAll Sound APIs on this class are static.\n\n<b>Registering</b><br/>\nBefore you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\nor register multiple sounds using {{#crossLink \"Sound/registerManifest\"}}{{/crossLink}}. If you don't register\nthem immediately, they will be automatically registered if you try and play a sound using {{#crossLink \"Sound/play\"}}{{/crossLink}},\nor if you create a stopped sound using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}.\n\n<b>Playback</b><br/>\nTo play a sound once its been registered, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\nThis method returns a {{#crossLink \"SoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\nPlease see the {{#crossLink \"SoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\n<b>Plugins</b><br/>\nBy default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\nare used (when available), although developers can change plugin priority or add new plugins.\nPlease see the {{#crossLink \"Sound\"}}{{/crossLink}} API methods for more on the playback and plugin APIs.\nTo install plugins, or specify a different plugin order, see {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n    Sound.registerPlugins([WebAudioPlugin, HTMLAudioPlugin]);\n    Sound.addEventListener(\"loadComplete\", Sound.proxy(this.loadHandler, (this)));\n    Sound.registerSound(\"path/to/mySound.mp3|path/to/mySound.ogg\", \"sound\");\n    function loadHandler(event) {\n        // This is fired for each sound that is registered.\n        var instance = Sound.play(\"sound\");  // play using id. Could also use source.\n        instance.addEventListener(\"playComplete\", Sound.proxy(this.handleComplete, this));\n        instance.setVolume(0.5);\n    }\n\nThe maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\nof {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.\n\n     Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\n<h4>Known Browser and OS issues</h4>\n<b>IE 9 html audio quirk</b><br/>\nNote in IE 9 there is a delay in applying volume changes to tags that occurs once playback is started. So if you have\nmuted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\nwhen or how you apply the volume change, as the tag seems to need to play to apply it.\n\n<b>iOS 6 limitations</b><br/>\n<ul>\n <li>Sound is initially muted and will only unmute through play being called inside a user initiated event (touch).</li>\n <li>Despite suggestions to the opposite, we have control over audio volume through our gain nodes.</li>\n</ul>\nMore details: http://stackoverflow.com/questions/12517000/no-sound-on-ios-6-web-audio-api\n\n<b>Android limitations</b><br/>\n<ul>\n <li>We have no control over audio volume. Only the user can set volume on their device.</li>\n <li>We can only play audio inside a user event (touch).  This currently means you cannot loop sound.</li>\n</ul>",
            "static": 1
        },
        "SoundChannel": {
            "name": "SoundChannel",
            "shortname": "SoundChannel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 933,
            "description": "An internal class that manages the number of active {{#crossLink \"SoundInstance\"}}{{/crossLink}} instances for\neach sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\nThe number of sounds is artificially limited by Sound in order to prevent over-saturation of a\nsingle sound, as well as to stay within hardware limitations, although the latter may disappear with better\nbrowser support.\n\nWhen a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\nsound that is already playing.",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the instances",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The number of instances allowed",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "is_constructor": 1,
            "access": "protected",
            "tagname": ""
        },
        "SoundInstance": {
            "name": "SoundInstance",
            "shortname": "SoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 5,
            "description": "A SoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n{{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The SoundInstance is returned by the active plugin\nfor control by the user.\n\n<h4>Example</h4>\n    Sound.play(\"myAssetPath/mySrcFile.mp3\");\n\nA number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\nAPI method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n\nOnce a SoundInstance is created, a reference can be stored that can be used to control the audio directly through\nthe SoundInstance. If the reference is not stored, the SoundInstance will play out its audio (and any loops), and\nis then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\nplayback has completed, a simple call to the {{#crossLink \"SoundInstance/play\"}}{{/crossLink}} instance method\nwill rebuild the references the Sound class need to control it.\n\n    var myInstance = Sound.play(\"myAssetPath/mySrcFile.mp3\");\n    myInstance.addEventListener(\"complete\", playAgain);\n    function playAgain(event) {\n        myInstance.play();\n    }\n\nEvents are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n\n    var myInstance = Sound.play(\"myAssetPath/mySrcFile.mp3\");\n    myInstance.addEventListener(\"complete\", playAgain);\n    myInstance.addEventListener(\"loop\", handleLoop);\n    myInstance.addEventListener(\"playbackFailed\", handleFailed);",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "owner",
                    "description": "The plugin instance that created this SoundInstance.",
                    "type": "Object"
                }
            ]
        },
        "WebAudioLoader": {
            "name": "WebAudioLoader",
            "shortname": "WebAudioLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 210,
            "description": "An internal helper class that preloads web audio via XHR. Note that this class and its methods are not documented\nproperly to avoid generating HTML documentation.",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the sound to load.",
                    "type": "String"
                },
                {
                    "name": "owner",
                    "description": "A reference to the class that created this instance.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "WebAudioPlugin": {
            "name": "WebAudioPlugin",
            "shortname": "WebAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.soundjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 350,
            "description": "Play sounds using Web Audio in the browser. The WebAudio plugin has been successfully tested with:\n<ul>\n <li>Google Chrome, version 23+ on OS X and Windows</li>\n <li>Safari 6+ on OS X</li>\n <li>Mobile Safari on iOS 6+</li>\n</ul>\n\nThe WebAudioPlugin is currently the default plugin, and will be used anywhere that it is supported. To change\nplugin priority, check out the Sound API {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\n<h4>Known Browser and OS issues for Web Audio Plugin</h4>\n<b>Webkit (Chrome and Safari)</b><br />\n<ul>\n <li>AudioNode.disconnect does not always seem to work. This can cause your file size to grow over time if you are playing a lot of audio files.</li>\n</ul>\n\n<b>iOS 6 limitations</b><br />\n<ul>\n <li>Sound is initially muted and will only unmute through play being called inside a user initiated event (touch).</li>\n</ul>",
            "is_constructor": 1
        },
        "CSSPlugin": {
            "name": "CSSPlugin",
            "shortname": "CSSPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.tweenjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 32,
            "description": "A TweenJS plugin for working with numeric CSS string properties (ex. top, left). To use simply install after\nTweenJS has loaded:\n\n    CSSPlugin.install();\n\nYou can adjust the CSS properties it will work with by modifying the <code>cssSuffixMap</code> property. Currently,\nthe top, left, bottom, right, width, height have a \"px\" suffix appended.",
            "is_constructor": 1
        },
        "Ease": {
            "name": "Ease",
            "shortname": "Ease",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.tweenjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 3,
            "description": "The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\neasing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n\nMost methods on Ease can be passed directly as easing functions:\n\n    Tween.get(target).to({x:100}, 500, Ease.linear);\n\nHowever, methods beginning with \"get\" will return an easing function based on parameter values:\n\n    Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n\nPlease see the <a href=\"http://www.createjs.com/#!/TweenJS/demos/sparkTable\">spark table demo</a> for an overview\nof the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n\n<i>Equations derived from work by Robert Penner.</i>",
            "static": 1
        },
        "MotionGuidePlugin": {
            "name": "MotionGuidePlugin",
            "shortname": "MotionGuidePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.tweenjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 5,
            "description": "A TweenJS plugin for working with motion guides.\n\nTo use, install the plugin after TweenJS has loaded. Next tween the 'guide' property with an object as detailed below.\n\n    MotionGuidePlugin.install();\n\n<h4>Example</h4>\n\n    // Using a Motion Guide\n    Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n    // Visualizing the line\n    graphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n\nEach path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\nbuilt in support for path changes mid tween. These are the Guide Object's properties:\n<ul>\n <li> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</li>\n <li> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</li>\n <li> end: Optional, 0-1 : Final position, default 1 if not specified.</li>\n <li> orient: Optional, bool : Set the target's rotation parallel to the curve at its position.</li>\n</ul>\nGuide objects should not be shared between tweens even if all properties are identical, the library stores\ninformation on these objects in the background and sharing them can cause unexpected behaviour. Values\noutside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.",
            "is_constructor": 1
        },
        "Timeline": {
            "name": "Timeline",
            "shortname": "Timeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.tweenjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 5,
            "description": "The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\ntimeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tweens",
                    "description": "An array of Tweens to add to this timeline. See addTween for more info."
                },
                {
                    "name": "labels",
                    "description": "An object defining labels for using gotoAndPlay/Stop. See }{{/crossLink}}\n for details.",
                    "type": "#crossLink \"Timeline/setLabels\""
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. ). All properties default to false.\n Supported props are:\n <ul>\n   <li>loop: sets the loop property on this tween.</li>\n   <li>useTicks: uses ticks for all durations instead of milliseconds.</li>\n   <li>ignoreGlobalPause: sets the ignoreGlobalPause property on this tween.</li>\n   <li>paused: indicates whether to start the tween paused.</li>\n   <li>position: indicates the initial position for this timeline.</li>\n   <li>onChanged: specifies an onChange handler for this timeline.</li>\n </ul>",
                    "type": "Loop:true"
                }
            ]
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xc.createjs.tweenjs",
            "namespace": "",
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 9,
            "description": "A Tween instance tweens properties for a single target.\nInstance methods can be chained for easy construction and sequencing:\n\n<h4>Example</h4>\n\n    target.alpha = 1;\n    Tween.get(target)\n        .wait(500)\n        .to({alpha:0, visible:false}, 1000)\n        .call(onComplete);\n    function onComplete() {\n        //Tween complete\n    }\n\nMultiple tweens can point to the same instance, however if they affect the same properties there could be unexpected\nbehaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass <code>override:true</code>\nin the props argument.\n\n    Tween.get(target, {override:true}).to({x:100});\n\nSubscribe to the \"change\" event to get notified when a property of the target is changed.\n\n    Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n    function handleChange(event) {\n        // The tween changed.\n    }\n\nSee the Tween {{#crossLink \"Tween/get\"}}{{/crossLink}} method for additional param documentation.",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "pluginData",
                    "description": "",
                    "type": "Object"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "..\\src\\core\\class.js",
            "line": 79,
            "description": "创建一个类。",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "params": [
                {
                    "name": "prop",
                    "description": "复制到 prototype 中的属性和方法",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "xc.class"
        },
        {
            "file": "..\\src\\core\\module.js",
            "line": 28,
            "description": "定义一个模块。",
            "itemtype": "method",
            "name": "define",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "模块标识。建议采用 a.b.c 这种有层次的模块标识写法。",
                    "type": "String"
                },
                {
                    "name": "factory",
                    "description": "模块对象生成函数。factory 写法为：<code>function(exports) {}</code>，其中 exports 是模块对象。\n 如果 factory 有返回值，则把返回值作为模块对象。",
                    "type": "Function"
                }
            ],
            "class": "xc.module"
        },
        {
            "file": "..\\src\\core\\module.js",
            "line": 40,
            "description": "获取模块对象。",
            "itemtype": "method",
            "name": "require",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "模块标识。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "返回模块对象。如果模块不存在，会抛出一个异常。factory 在首次 require 时执行，生成模块对象。",
                "type": "*"
            },
            "class": "xc.module"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 106,
            "description": "The image to render. This can be an Image, a Canvas, or a Video.",
            "itemtype": "property",
            "name": "image",
            "type": "Image | HTMLCanvasElement | HTMLVideoElement",
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 114,
            "description": "Whether or not the Bitmap should be draw to the canvas at whole pixel coordinates.",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "Boolean",
            "default": "true",
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 123,
            "description": "Specifies an area of the source image to draw. If omitted, the whole image will be drawn.",
            "itemtype": "property",
            "name": "sourceRect",
            "type": "Rectangle",
            "default": "null",
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 132,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas.",
                "type": "Boolean"
            },
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 147,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 169,
            "description": "Returns a clone of the Bitmap instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Bitmap instance.",
                "type": "Bitmap"
            },
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Bitmap.js",
            "line": 182,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Bitmap",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 29,
            "description": "Dispatched when an animation reaches its ends.",
            "itemtype": "event",
            "name": "animationend",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The name of the animation that just ended.",
                    "type": "String"
                },
                {
                    "name": "next",
                    "description": "The name of the next animation that will be played, or null.\n This will be the same as name if the animation is looping.",
                    "type": "String"
                }
            ],
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 40,
            "description": "The frame that will be drawn when draw is called. Note that with some SpriteSheet data, this will advance\nnon-sequentially. READ-ONLY.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "{Number}",
            "default": "-1",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 50,
            "description": "Returns the currently playing animation. READ-ONLY.",
            "itemtype": "property",
            "name": "currentAnimation",
            "type": "{String}",
            "final": 1,
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 59,
            "description": "Prevents the animation from advancing each tick automatically. For example, you could create a sprite sheet of\nicons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 69,
            "description": "The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\nSee {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 78,
            "description": "Whether or not the image should be draw to the canvas at whole pixel coordinates.",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "{Boolean}",
            "default": "true",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 87,
            "description": "When used in conjunction with animations having an frequency greater than 1, this lets you offset which tick the\nplayhead will advance on. For example, you could create two BitmapAnimations, both playing an animation with a\nfrequency of 2, but one having offset set to 1. Both instances would advance every second tick, but they would\nadvance on alternating ticks (effectively, one instance would advance on odd ticks, the other on even ticks).",
            "itemtype": "property",
            "name": "offset",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 99,
            "description": "Specifies the current frame index within the current playing animation. When playing normally, this will increase\nsuccessively from 0 to n-1, where n is the number of frames in the current animation.",
            "itemtype": "property",
            "name": "currentAnimationFrame",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 109,
            "itemtype": "property",
            "name": "_advanceCount",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 117,
            "itemtype": "property",
            "name": "_animation",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 125,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 139,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 160,
            "description": "Begin playing a paused animation.\nThe BitmapAnimation will be paused if either {{#crossLink \"BitmapAnimation/stop\"}}{{/crossLink}}\nor {{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}} is called.\nSingle frame animations will remain unchanged.",
            "itemtype": "method",
            "name": "play",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 172,
            "description": "Stop playing a running animation.\nThe BitmapAnimation will be playing if {{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}} is called.\nNote that calling {{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}\nor {{#crossLink \"BitmapAnimation/play\"}}{{/crossLink}} will resume playback.",
            "itemtype": "method",
            "name": "stop",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 184,
            "description": "Sets paused to false and plays the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to and\n begin playing.",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 196,
            "description": "Sets paused to true and seeks to the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to and\n stop.",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 208,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "itemtype": "method",
            "name": "advance",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 218,
            "description": "Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\nthe origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\nrectangle with [x=-50, y=-40, width=90, height=70].\n\nAlso see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.",
                "type": "Rectangle"
            },
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 232,
            "description": "Returns a clone of the BitmapAnimation instance. Note that the same SpriteSheet is shared between cloned instances.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the BitmapAnimation instance.",
                "type": "BitmapAnimation"
            },
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 244,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 254,
            "description": "Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the\n{{#crossLink \"Stage\"}}{{/crossLink}} ticks.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_tick",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 267,
            "description": "Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_normalizeCurrentFrame",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 302,
            "description": "Dispatches the \"animationend\" event. Returns true if a handler changed the animation\n(ex. calling {{#crossLink \"BitmapAnimation/stop\"}}{{/crossLink}},\n{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}, etc.)",
            "itemtype": "property",
            "name": "_dispatchAnimationEnd",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 318,
            "itemtype": "method",
            "name": "cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\BitmapAnimation.js",
            "line": 333,
            "description": "Moves the playhead to the specified frame number or animation.",
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation that the playhead should move to.",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapAnimation",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 31,
            "description": "The array of children in the display list. You should usually use the child management methods such as\n{{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n{{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\nincluded for advanced users.",
            "itemtype": "property",
            "name": "children",
            "type": "Array",
            "default": "null",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 43,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 57,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 84,
            "description": "Adds a child to the top of the display list. You can also add multiple children, such as \"addChild(child1, child2, ...);\".\nReturns the child that was added, or the last child if multiple children were added.\n\n<h4>Example</h4>\n    container.addChild(bitmapInstance, shapeInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 108,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one,\nand setting its parent to this Container. You can also add multiple children, such as \"addChildAt(child1, child2, ..., index);\".\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use: container.addChildAt(myShape, container.getChildIndex(otherShape)).\nThis would also bump otherShape's index up by one.\nReturns the last child that was added, or the last child if multiple children were added.\nFails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 136,
            "description": "Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\nalready known. You can also remove multiple children, such as \"removeChild(child1, child2, ...);\".\nReturns true if the child (or children) was removed, or false if it was not in the display list.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The child to remove.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if it was not in the display list.",
                "type": "Boolean"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 155,
            "description": "Removes the child at the specified index from the display list, and sets its parent to null. You can also remove\nmultiple children, such as \"removeChildAt(2, 7, ...);\".\nReturns true if the child (or children) was removed, or false if any index was out of range.",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to remove.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if any index was out of range.",
                "type": "Boolean"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 180,
            "description": "Removes all children from the display list.",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 190,
            "description": "Returns the child at the specified index.",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The child at the specified index.",
                "type": "DisplayObject"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 201,
            "description": "Returns the child with the specified name.",
            "itemtype": "method",
            "name": "getChildByName",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the child to return.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The child with the specified name.",
                "type": "DisplayObject"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 216,
            "description": "Performs an array sort operation on the child list.",
            "itemtype": "method",
            "name": "sortChildren",
            "params": [
                {
                    "name": "sortFunction",
                    "description": "the function to use to sort the child list. See javascript's Array.sort\n documentation for details.",
                    "type": "Function"
                }
            ],
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 227,
            "description": "Returns the index of the specified child in the display list, or -1 if it is not in the display list.",
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "The child to return the index of.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The index of the specified child. -1 if the child is not found.",
                "type": "Number"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 238,
            "description": "Returns the number of children in the display list.",
            "itemtype": "method",
            "name": "getNumChildren",
            "return": {
                "description": "The number of children in the display list.",
                "type": "Number"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 248,
            "description": "Swaps the children at the specified indexes. Fails silently if either index is out of range.",
            "params": [
                {
                    "name": "index1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "index2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "swapChildrenAt",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 264,
            "description": "Swaps the specified children's depth in the display list.\nFails silently if either child is not a child of this Container.",
            "params": [
                {
                    "name": "child1",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "child2",
                    "description": "",
                    "type": "DisplayObject"
                }
            ],
            "itemtype": "method",
            "name": "swapChildren",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 285,
            "description": "Changes the depth of the specified child.\nFails silently if the child is not a child of this container, or the index is out of range.",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setChildIndex",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 305,
            "description": "Returns true if the specified display object either is this container or is a descendent.\n(child, grandchild, etc) of this container.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject to be checked.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the specified display object either is this container or is a descendent.",
                "type": "Boolean"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 321,
            "description": "Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\nspecified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\ntransform properties including regX/Y.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the\n specified coordinates.",
                "type": "Boolean"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 337,
            "description": "Returns an array of all display objects under the specified coordinates that are in this container's display list.\nThis routine ignores any display objects with mouseEnabled set to false. The array will be sorted in order of\nvisual depth, with the top-most display object at index 0. This uses shape based hit detection, and can be an\nexpensive operation to run, so it is best to use it carefully. For example, if testing for objects under the\nmouse, test on tick (instead of on mousemove), and only if the mouse's position has changed.",
            "itemtype": "method",
            "name": "getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An Array of DisplayObjects under the specified coordinates.",
                "type": "Array"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 356,
            "description": "Similar to getObjectsUnderPoint(), but returns only the top-most display object. This runs significantly faster\nthan getObjectsUnderPoint(), but is still an expensive operation. See getObjectsUnderPoint() for more information.",
            "itemtype": "method",
            "name": "getObjectUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The top-most display object under the specified coordinates.",
                "type": "DisplayObject"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 370,
            "description": "Returns a clone of this Container. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent).",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, all of the descendants of this container will be cloned recursively.\n If false, the properties of the container will be cloned, but the new instance will not have any children.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A clone of the current Container instance.",
                "type": "Container"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 392,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 402,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Container.js",
            "line": 414,
            "itemtype": "method",
            "name": "_getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "mouseEvents",
                    "description": "A bitmask indicating which event types to look for. Bit 1 specifies press & click &\n double click, bit 2 specifies it should look for mouse over and mouse out. This implementation may change.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "protected",
            "tagname": "",
            "class": "Container",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 25,
            "description": "Dispatched when the user presses their left mouse button over the display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mousedown",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 32,
            "description": "Dispatched when the user presses their left mouse button and then releases it while over the display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "click",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 39,
            "description": "Dispatched when the user double clicks their left mouse button over this display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "dblclick",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 46,
            "description": "Dispatched when the user's mouse rolls over this display object. This event must be enabled using\n{{#crossLink \"Stage.enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseover",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 54,
            "description": "Dispatched when the user's mouse rolls out of this display object.\nThis event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseout",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 62,
            "description": "Dispatched on each display object on a stage whenever the stage updates.\nThis occurs immediately before the rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is\ncalled, first all display objects on the stage dispatch the tick event, then all of the display objects are drawn\nto stage. Children will have their tick event dispatched in order of their depth prior to the event being\ndispatched on their parent.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An array containing any arguments that were passed to the Stage.update() method.\n For example if you called stage.update(\"hello\"), then the params would be [\"hello\"].",
                    "type": "Array"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 76,
            "description": "The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.",
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 85,
            "description": "If a cache is active, this returns the canvas that holds the cached version of this display object. See cache()\nfor more information. READ-ONLY.",
            "itemtype": "property",
            "name": "cacheCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 95,
            "description": "Unique ID for this display object. Makes display objects easier for some uses.",
            "itemtype": "property",
            "name": "id",
            "type": "{Number}",
            "default": "-1",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 104,
            "description": "Indicates whether to include this object when running Stage.getObjectsUnderPoint(), and thus for mouse\ninteractions. Setting this to true for Containers will cause the Container to be returned (not its children)\nregardless of whether it's mouseChildren property is true.",
            "itemtype": "property",
            "name": "mouseEnabled",
            "type": "{Boolean}",
            "default": "true",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 115,
            "description": "An optional name for this display object. Included in toString(). Useful for debugging.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 124,
            "description": "A reference to the Container or Stage object that contains this display object, or null if it has not been added\nto one. READ-ONLY.",
            "itemtype": "property",
            "name": "parent",
            "final": 1,
            "type": "{Container}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 135,
            "description": "The x offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\nit's center, you would set regX and regY to 50.",
            "itemtype": "property",
            "name": "regX",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 145,
            "description": "The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\nit's center, you would set regX and regY to 50.",
            "itemtype": "property",
            "name": "regY",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 155,
            "description": "The rotation in degrees for this display object.",
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 164,
            "description": "The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\nobject to twice it's nominal width.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 174,
            "description": "The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\nobject to half it's nominal height.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 184,
            "description": "The factor to skew this display object horizontally.",
            "itemtype": "property",
            "name": "skewX",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 193,
            "description": "The factor to skew this display object vertically.",
            "itemtype": "property",
            "name": "skewY",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 202,
            "description": "A shadow object that defines the shadow to render on this display object. Set to null to remove a shadow. If\nnull, this property is inherited from the parent container.",
            "itemtype": "property",
            "name": "shadow",
            "type": "{Shadow}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 212,
            "description": "Indicates whether this display object should be rendered to the canvas and included when running\nStage.getObjectsUnderPoint().",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 222,
            "description": "The x (horizontal) position of the display object, relative to its parent.",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 231,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 238,
            "description": "The composite operation indicates how the pixels of this display object will be composited with the elements\nbehind it. If null, this property is inherited from the parent container. For more information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">whatwg spec on compositing</a>.",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 249,
            "description": "An array of Filter objects to apply to this display object. Filters are only applied / updated when cache() or\nupdateCache() is called on the display object, and only apply to the area that is cached.",
            "itemtype": "property",
            "name": "filters",
            "type": "{Array}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 259,
            "description": "Returns an ID number that uniquely identifies the current cache for this display object.\nThis can be used to determine if the cache has changed since a previous check.",
            "itemtype": "property",
            "name": "cacheID",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 269,
            "description": "A Shape instance that defines a vector mask (clipping path) for this display object. The shape's transformation\nwill be applied relative to the display object's parent coordinates (as if it were a child of the parent).",
            "itemtype": "property",
            "name": "mask",
            "type": "{Shape}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 279,
            "description": "A display object that will be tested when checking mouse interactions or testing getObjectsUnderPoint. The hit\narea will have its transformation applied relative to this display object's coordinate space (as though the hit\ntest object were a child of this display object and relative to its regX/Y). The hitArea will be tested using\nonly its own alpha value regardless of the alpha value on the target display object, or the target's ancestors\n(parents). hitArea is NOT currently used by the hitTest() method.\n\nNote: hitArea is not supported for Stage.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 294,
            "description": "A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\nobject. You must enable mouseover events using the stage.enableMouseOver() method to use this property.\nIf null it will use the default cursor.",
            "itemtype": "property",
            "name": "cursor",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 305,
            "itemtype": "property",
            "name": "_cacheOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 313,
            "itemtype": "property",
            "name": "_cacheOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 321,
            "itemtype": "property",
            "name": "_cacheScale",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 329,
            "itemtype": "property",
            "name": "_cacheDataURLID",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 337,
            "itemtype": "property",
            "name": "_cacheDataURL",
            "access": "protected",
            "tagname": "",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 345,
            "itemtype": "property",
            "name": "_matrix",
            "access": "protected",
            "tagname": "",
            "type": "{Matrix2D}",
            "default": "null",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 353,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas.",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 366,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 386,
            "description": "Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\nto the specified context. This is typically called prior to draw.",
            "itemtype": "method",
            "name": "setupContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D to update.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 415,
            "description": "Draws the display object into a new canvas, which is then used for subsequent draws. For complex content\nthat does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\nthis can provide for much faster rendering because the content does not need to be re-rendered each tick. The\ncached display object can be moved, rotated, faded, etc freely, however if it's content changes, you must\nmanually update the cache by calling updateCache() or cache() again. You must specify the cache area via the x,\ny, w, and h parameters. This defines the rectangle that will be rendered and cached using this display object's\ncoordinates. For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25, you could call\nmyShape.cache(-25, -25, 50, 50) to cache the full shape.",
            "itemtype": "method",
            "name": "cache",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "Optional. The scale at which the cache will be created. For example, if you cache a vector\n shape using myShape.cache(0, 0, 100, 100, 2) then the resulting cacheCanvas will be 200x200 px. This lets you\n scale and rotate cached elements with greater fidelity. Default is 1.",
                    "type": "Number"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 446,
            "description": "Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\nIf compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\nwill be drawn over the existing cache using the specified compositeOperation.",
            "itemtype": "method",
            "name": "updateCache",
            "params": [
                {
                    "name": "compositeOperation",
                    "description": "The compositeOperation to use, or null to clear the cache and redraw it.\n <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">whatwg spec on compositing</a>.",
                    "type": "String"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 470,
            "description": "Clears the current cache. See cache() for more information.",
            "itemtype": "method",
            "name": "uncache",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 481,
            "description": "Returns a data URL for the cache, or null if this display object is not cached.\nUses cacheID to ensure a new data URL is not generated if the cache has not changed.",
            "itemtype": "method",
            "name": "getCacheDataURL.",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 493,
            "description": "Returns the stage that this display object will be rendered on, or null if it has not been added to one.",
            "itemtype": "method",
            "name": "getStage",
            "return": {
                "description": "The Stage instance that the display object is a descendent of. null if the DisplayObject has not\n been added to a Stage.",
                "type": "Stage"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 511,
            "description": "Transforms the specified x and y position from the coordinate space of the display object to the global (stage)\ncoordinate space. For example, this could be used to position an HTML label over a specific point on a nested\ndisplay object. Returns a Point instance with x and y properties correlating to the transformed coordinates on\nthe stage.",
            "itemtype": "method",
            "name": "localToGlobal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the source display object to transform.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed coordinates on the stage.",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 529,
            "description": "Transforms the specified x and y position from the global (stage) coordinate space to the\ncoordinate space of the display object. For example, this could be used to determine\nthe current mouse position within the display object. Returns a Point instance with x and y properties\ncorrelating to the transformed position in the display object's coordinate space.",
            "itemtype": "method",
            "name": "globalToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the stage to transform.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed position in the display\n object's coordinate space.",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 549,
            "description": "Transforms the specified x and y position from the coordinate space of this display object to the\ncoordinate space of the target display object. Returns a Point instance with x and y properties\ncorrelating to the transformed position in the target's coordinate space. Effectively the same as calling\nvar pt = this.localToGlobal(x, y); pt = target.globalToLocal(pt.x, pt.y);",
            "itemtype": "method",
            "name": "localToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "The target display object to which the coordinates will be transformed.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "Returns a Point instance with x and y properties correlating to the transformed position in the\n target's coordinate space.",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 567,
            "description": "Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\nOmitted parameters will have the default value set (ex. 0 for x/y, 1 for scaleX/Y).",
            "itemtype": "method",
            "name": "setTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this instance. Useful for chaining commands.",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 596,
            "description": "Returns a matrix based on this object's transform.",
            "itemtype": "method",
            "name": "getMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "Optional. A Matrix2D object to populate with the calculated values. If null, a new\n Matrix object is returned.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "A matrix representing this display object's transform.",
                "type": "Matrix2D"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 610,
            "description": "Generates a concatenated Matrix2D object representing the combined transform of the display object and all of its\nparent Containers up to the highest level ancestor (usually the stage). This can be used to transform positions\nbetween coordinate spaces, such as with localToGlobal and globalToLocal.",
            "itemtype": "method",
            "name": "getConcatenatedMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "Optional. A Matrix2D object to populate with the calculated values. If null, a new\n Matrix object is returned.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "a concatenated Matrix2D object representing the combined transform of the display object and\n all of its parent Containers up to the highest level ancestor (usually the stage).",
                "type": "Matrix2D"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 632,
            "description": "Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\nspecified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\ntransform properties including regX/Y.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicting whether a visible portion of the DisplayObject intersect the specified local Point.",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 653,
            "description": "Provides a chainable shortcut method for setting a number of properties on a DisplayObject instance.\n\n<h4>Example</h4>\n    var shape = stage.addChild(new Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the DisplayObject instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns The DisplayObject instance the method is called on (useful for chaining calls).",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 668,
            "description": "Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current DisplayObject instance.",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 681,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 691,
            "itemtype": "method",
            "name": "cloneProps",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "The DisplayObject instance which will have properties from the current DisplayObject\n instance copied into.",
                    "type": "DisplayObject"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 720,
            "itemtype": "method",
            "name": "_applyShadow",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "shadow",
                    "description": "",
                    "type": "Shadow"
                }
            ],
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 734,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 745,
            "itemtype": "method",
            "name": "_testHit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 762,
            "itemtype": "method",
            "name": "_applyFilters",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 777,
            "description": "Indicates whether the display object has a listener of the corresponding event types.",
            "itemtype": "method",
            "name": "_hasMouseHandler",
            "params": [
                {
                    "name": "typeMask",
                    "description": "A bitmask indicating which event types to look for. Bit 1 specifies press & click &\n double click, bit 2 specifies it should look for mouse over and mouse out. This implementation may change.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 793,
            "description": "Suppresses errors generated when using features like hitTest, mouse events, and getObjectsUnderPoint with cross domain content",
            "itemtype": "property",
            "name": "suppressCrossDomainErrors",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 803,
            "itemtype": "property",
            "name": "_hitTestCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 812,
            "itemtype": "property",
            "name": "_hitTestContext",
            "type": "{CanvasRenderingContext2D}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\DisplayObject.js",
            "line": 820,
            "itemtype": "property",
            "name": "_nextCacheID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 17,
            "itemtype": "method",
            "name": "exec",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Command",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 99,
            "itemtype": "property",
            "name": "_strokeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 106,
            "itemtype": "property",
            "name": "_strokeStyleInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 113,
            "itemtype": "property",
            "name": "_ignoreScaleStroke",
            "access": "protected",
            "tagname": "",
            "type": "Boolean",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 120,
            "itemtype": "property",
            "name": "_fillInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 127,
            "itemtype": "property",
            "name": "_instructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 134,
            "itemtype": "property",
            "name": "_oldInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 141,
            "itemtype": "property",
            "name": "_activeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 148,
            "itemtype": "property",
            "name": "_active",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 156,
            "itemtype": "property",
            "name": "_dirty",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 164,
            "description": "Returns true if this Graphics instance has no drawing commands.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "Returns true if this Graphics instance has no drawing commands.",
                "type": "Boolean"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 174,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 191,
            "description": "Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\nstroke descriptions. Used by DisplayObject.clippingPath to draw the clipping path, for example.",
            "itemtype": "method",
            "name": "drawAsPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 207,
            "description": "Moves the drawing point to the specified position.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should move to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should move to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 220,
            "description": "Draws a line from the current drawing point to the specified position, which become the new current drawing point.\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should draw to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 236,
            "description": "Draws an arc with the specified control points and radius.\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 255,
            "description": "Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\nFor example, to draw a full circle with a radius of 20 centered at (100, 100):\n\n    arc(100, 100, 20, 0, Math.PI*2);\n\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 280,
            "description": "Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 298,
            "description": "Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 318,
            "description": "Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\nFor detailed information, read the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">whatwg spec</a>.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 336,
            "description": "Closes the current path, effectively drawing a line from the current drawing point to the first drawing point\nspecified since the fill or stroke was last set.",
            "itemtype": "method",
            "name": "closePath",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 351,
            "description": "Clears all drawing instructions, effectively resetting this Graphics instance.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 366,
            "description": "Begins a fill with the specified color. This ends the current sub-path.",
            "itemtype": "method",
            "name": "beginFill",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n null will result in no fill.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 381,
            "description": "Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\nFor example, the following code defines a black to white vertical gradient ranging from 20px to 120px,\nand draws a square to display it:\n\n    myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);",
            "itemtype": "method",
            "name": "beginLinearGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a\n gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9]\n would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 409,
            "description": "Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\n    myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);",
            "itemtype": "method",
            "name": "beginRadialGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a\n gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9]\n would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 438,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path.",
            "itemtype": "method",
            "name": "beginBitmapFill",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\n as the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n will be applied relative to the parent transform.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 469,
            "description": "Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.",
            "itemtype": "method",
            "name": "endFill",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 479,
            "description": "Sets the stroke style for the current sub-path. Like all drawing methods, this can be chained, so you can define\nthe stroke style and color in a single line of code like so:\n\n    myGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");",
            "itemtype": "method",
            "name": "setStrokeStyle",
            "params": [
                {
                    "name": "thickness",
                    "description": "The width of the stroke.",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "Indicates the type of caps to use at the end of lines. One of butt, round, or square.\n Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "Specifies the type of joints that should be used where two lines meet.\n One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n for use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "If joints is set to \"miter\", then you can specify a miter limit ratio which\n controls at what point a mitered joint will be clipped.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "If true, the stroke will be drawn at the specified thickness regardless of\n active transformations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 510,
            "description": "Begins a stroke with the specified color. This ends the current sub-path.",
            "itemtype": "method",
            "name": "beginStroke",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n null will result in no stroke.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 524,
            "description": "Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\nexample, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\nsquare to display it:\n\n    myGraphics.setStrokeStyle(10).beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);",
            "itemtype": "method",
            "name": "beginLinearGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a\n gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9]\n would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 552,
            "description": "Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\n    myGraphics.setStrokeStyle(10)\n        .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n        .drawRect(50, 90, 150, 110);",
            "itemtype": "method",
            "name": "beginRadialGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a\n gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9]\n would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color to 100%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 583,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills, strokes\ndo not currently support a matrix parameter due to limitations in the canvas API.",
            "itemtype": "method",
            "name": "beginBitmapStroke",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\n as the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of\n \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 602,
            "description": "Ends the current sub-path, and begins a new one with no stroke.\nFunctionally identical to <code>beginStroke(null)</code>.",
            "itemtype": "method",
            "name": "endStroke",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 614,
            "description": "Draws a rounded rectangle with all corners with the specified radius.",
            "itemtype": "method",
            "name": "drawRoundRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 630,
            "description": "Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.",
            "itemtype": "method",
            "name": "drawRoundRectComplex",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "Top left corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "Top right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "Bottom right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "Bottom left corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 669,
            "description": "Draws a circle with the specified radius at (x, y).\n\n    var g = new Graphics();\n    g.setStrokeStyle(1);\n    g.beginStroke(Graphics.getRGB(0,0,0));\n    g.beginFill(Graphics.getRGB(255,0,0));\n    g.drawCircle(0,0,3);\n\n    var s = new Shape(g);\n    s.x = 100;\n    s.y = 100;\n\n    stage.addChild(s);\n    stage.update();",
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of circle.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 696,
            "description": "Draws an ellipse (oval) with a specified width (w) and height (h).\nSimilar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}, except the width and height can be different.",
            "itemtype": "method",
            "name": "drawEllipse",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of ellipse.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of ellipse.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "height (horizontal diameter) of ellipse. The horizontal radius will be half of this number.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "width (vertical diameter) of ellipse. The vertical radius will be half of this number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 724,
            "description": "Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\npoints. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\nradius of 50:\n\n    myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n    // Note: -90 makes the first point vertical",
            "itemtype": "method",
            "name": "drawPolyStar",
            "params": [
                {
                    "name": "x",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The outer radius of the shape.",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "The number of points on the star or sides on the polygon.",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "The angle of the first point / corner. For example a value of 0 will draw the first point\n directly to the right of the center.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 761,
            "description": "Decodes a compact encoded path string into a series of draw instructions. This format is not intended to be human\nreadable, and is meant for use by authoring tools. The format uses a base64 character set, with each character\nrepresenting 6 bits, to define a series of draw commands.\n\nEach command is comprised of a single \"header\" character followed by a variable number of alternating x and y\nposition values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\ntype of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\nindicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\nlatter. Bits 5 and 6 are currently unused.\n\nFollowing the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\nparameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\nby an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\ncase of move operations which are absolute, this value is a delta from the previous x or y position (as appropriate).\n\nFor example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n<br/>A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per parameter.\n<br/>n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits indicate 1500 tenths of a pixel.\n<br/>AA - 000000000000. Absolute y position of 0.\n<br/>I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n<br/>Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to provide an absolute position of +150.0px.\n<br/>AAA - 000000000000000000. A y delta value of 0.",
            "itemtype": "method",
            "name": "decodePath",
            "params": [
                {
                    "name": "str",
                    "description": "The path string to decode.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 824,
            "description": "Returns a clone of this Graphics instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Graphics instance.",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 843,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 853,
            "itemtype": "method",
            "name": "_updateInstructions",
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 877,
            "itemtype": "method",
            "name": "_newPath",
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 888,
            "description": "Used to create Commands that set properties",
            "itemtype": "method",
            "name": "_setProp",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 900,
            "description": "Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\"rgba(255, 255, 255, 1.0)\", or if alpha is null then in the format \"rgb(255, 255, 255)\". For example,\n\n    Graphics.getRGB(50, 100, 150, 0.5);\n\nwill return \"rgba(50, 100, 150, 0.5)\". It also supports passing a single hex color value as the first param, and an\noptional alpha value as the second param. For example,\n\n    Graphics.getRGB(0xFF00FF, 0.2);\n\nwill return \"rgba(255, 0, 255, 0.2)\".",
            "itemtype": "method",
            "name": "getRGB",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "The red component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "The green component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "The blue component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "Optional. The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified RGB numeric color values in the format\n \"rgba(255, 255, 255, 1.0)\", or if alpha is null then in the format \"rgb(255, 255, 255)\".",
                "type": "String"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 936,
            "description": "Returns a CSS compatible color string based on the specified HSL numeric color values in the format\n\"hsla(360, 100, 100, 1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\". For example,\nthis will return \"hsl(150, 100, 70)\".\n\n    Graphics.getHSL(150, 100, 70);",
            "itemtype": "method",
            "name": "getHSL",
            "static": 1,
            "params": [
                {
                    "name": "hue",
                    "description": "The hue component for the color, between 0 and 360.",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "The saturation component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "lightness",
                    "description": "The lightness component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "Optional. The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified HSL numeric color values in the format\n \"hsla(360, 100, 100, 1.0)\", or if alpha is null then in the format \"hsl(360, 100, 100)\".",
                "type": "String"
            },
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 960,
            "description": "Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "BASE_64",
            "static": 1,
            "final": 1,
            "type": "{Object}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 981,
            "description": "Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to \"butt\",\n1 to \"round\", and 2 to \"square\". For example, to set the line caps to \"square\":\n\n    myGraphics.ss(16, 2);",
            "itemtype": "property",
            "name": "STROKE_CAPS_MAP",
            "static": 1,
            "final": 1,
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 995,
            "description": "Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\"miter\", 1 to \"round\", and 2 to \"bevel\". For example, to set the line joints to \"bevel\":\n\n    myGraphics.ss(16, 0, 2);",
            "itemtype": "property",
            "name": "STROKE_JOINTS_MAP",
            "static": 1,
            "final": 1,
            "type": "{Array}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1009,
            "itemtype": "property",
            "name": "_ctx",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{CanvasRenderingContext2D}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1017,
            "itemtype": "property",
            "name": "beginCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1025,
            "itemtype": "property",
            "name": "fillCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1033,
            "itemtype": "property",
            "name": "strokeCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1044,
            "description": "Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "curveTo",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1052,
            "description": "Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "drawRect",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1060,
            "itemtype": "method",
            "name": "mt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1068,
            "description": "Shortcut to lineTo.",
            "itemtype": "method",
            "name": "lt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1077,
            "description": "Shortcut to arcTo.",
            "itemtype": "method",
            "name": "at",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1086,
            "description": "Shortcut to bezierCurveTo.",
            "itemtype": "method",
            "name": "bt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1095,
            "description": "Shortcut to quadraticCurveTo / curveTo.",
            "itemtype": "method",
            "name": "qt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1104,
            "description": "Shortcut to arc.",
            "itemtype": "method",
            "name": "a",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1113,
            "description": "Shortcut to rect.",
            "itemtype": "method",
            "name": "r",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1122,
            "description": "Shortcut to closePath.",
            "itemtype": "method",
            "name": "cp",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1131,
            "description": "Shortcut to clear.",
            "itemtype": "method",
            "name": "c",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1140,
            "description": "Shortcut to beginFill.",
            "itemtype": "method",
            "name": "f",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1149,
            "description": "Shortcut to beginLinearGradientFill.",
            "itemtype": "method",
            "name": "lf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1158,
            "description": "Shortcut to beginRadialGradientFill.",
            "itemtype": "method",
            "name": "rf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1167,
            "description": "Shortcut to beginBitmapFill.",
            "itemtype": "method",
            "name": "bf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1176,
            "description": "Shortcut to endFill.",
            "itemtype": "method",
            "name": "ef",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1185,
            "description": "Shortcut to setStrokeStyle.",
            "itemtype": "method",
            "name": "ss",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1194,
            "description": "Shortcut to beginStroke.",
            "itemtype": "method",
            "name": "s",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1203,
            "description": "Shortcut to beginLinearGradientStroke.",
            "itemtype": "method",
            "name": "ls",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1212,
            "description": "Shortcut to beginRadialGradientStroke.",
            "itemtype": "method",
            "name": "rs",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1221,
            "description": "Shortcut to beginBitmapStroke.",
            "itemtype": "method",
            "name": "bs",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1230,
            "description": "Shortcut to endStroke.",
            "itemtype": "method",
            "name": "es",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1239,
            "description": "Shortcut to drawRect.",
            "itemtype": "method",
            "name": "dr",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1248,
            "description": "Shortcut to drawRoundRect.",
            "itemtype": "method",
            "name": "rr",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1257,
            "description": "Shortcut to drawRoundRectComplex.",
            "itemtype": "method",
            "name": "rc",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1266,
            "description": "Shortcut to drawCircle.",
            "itemtype": "method",
            "name": "dc",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1275,
            "description": "Shortcut to drawEllipse.",
            "itemtype": "method",
            "name": "de",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1284,
            "description": "Shortcut to drawPolyStar.",
            "itemtype": "method",
            "name": "dp",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Graphics.js",
            "line": 1293,
            "description": "Shortcut to decodePath.",
            "itemtype": "method",
            "name": "p",
            "access": "protected",
            "tagname": "",
            "type": "Function",
            "class": "Graphics",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 37,
            "description": "Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\nSee each constant for a description of the behaviour.",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "null",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 47,
            "description": "Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.",
            "itemtype": "property",
            "name": "startPosition",
            "type": "Number",
            "default": "0",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 56,
            "description": "Indicates whether this MovieClip should loop when it reaches the end of its timeline.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 65,
            "description": "Read-Only. The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 73,
            "description": "The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\ninstance is initialized.",
            "itemtype": "property",
            "name": "timeline",
            "type": "Timeline",
            "default": "null",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 83,
            "description": "If true, the MovieClip's position will not advance when ticked.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 92,
            "description": "If true, actions in this MovieClip's tweens will be run when the playhead advances.",
            "itemtype": "property",
            "name": "actionsEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 101,
            "description": "If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\nit back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\nFor example, if you had a character animation with a \"body\" child MovieClip instance with different costumes on\neach frame, you could set body.autoReset = false, so that you can manually change the frame it is on, without\nworrying that it will be reset automatically.",
            "itemtype": "property",
            "name": "autoReset",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 115,
            "itemtype": "property",
            "name": "_synchOffset",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 123,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 131,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 139,
            "description": "List of display objects that are actively being managed by the MovieClip.",
            "itemtype": "property",
            "name": "_managed",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 147,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 161,
            "description": "Draws the display object into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 180,
            "description": "Sets paused to false.",
            "itemtype": "method",
            "name": "play",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 189,
            "description": "Sets paused to true.",
            "itemtype": "method",
            "name": "stop",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 198,
            "description": "Advances this movie clip to the specified position or label and sets paused to false.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 209,
            "description": "Advances this movie clip to the specified position or label and sets paused to true.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 220,
            "description": "MovieClip instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 230,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 240,
            "itemtype": "method",
            "name": "_tick",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 251,
            "itemtype": "method",
            "name": "_goto",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 264,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 273,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 316,
            "itemtype": "method",
            "name": "_setState",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 331,
            "description": "Adds a child to the timeline, and sets it up as a managed child.",
            "itemtype": "method",
            "name": "_addManagedChild",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 349,
            "description": "Read-only. The MovieClip will advance independently of its parent, even if its parent is paused.\nThis is the default mode.",
            "itemtype": "property",
            "name": "INDEPENDENT",
            "static": 1,
            "type": "String",
            "default": "\"independent\"",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 360,
            "description": "Read-only. The MovieClip will only display a single frame (as determined by the startPosition property).",
            "itemtype": "property",
            "name": "SINGLE_FRAME",
            "static": 1,
            "type": "String",
            "default": "\"single\"",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 370,
            "description": "Read-only. The MovieClip will be advanced only when it's parent advances and will be synched to the position of\nthe parent MovieClip.",
            "itemtype": "property",
            "name": "SYNCHED",
            "static": 1,
            "type": "String",
            "default": "\"synched\"",
            "class": "MovieClip",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 393,
            "itemtype": "method",
            "name": "priority",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 399,
            "itemtype": "method",
            "name": "install",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 407,
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 415,
            "itemtype": "method",
            "name": "step",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\MovieClip.js",
            "line": 423,
            "itemtype": "method",
            "name": "tween",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 25,
            "description": "The color of the shadow.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "default": "null",
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 34,
            "description": "The x offset of the shadow.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 43,
            "description": "The y offset of the shadow.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 52,
            "description": "The blur of the shadow.",
            "itemtype": "property",
            "name": "blur",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 61,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 71,
            "description": "Returns a clone of this Shadow instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Shadow instance.",
                "type": "Shadow"
            },
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shadow.js",
            "line": 82,
            "description": "An identity shadow object (all properties are set to 0). Read-only.",
            "itemtype": "property",
            "name": "identity",
            "type": "Shadow",
            "static": 1,
            "final": 1,
            "class": "Shadow",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 34,
            "description": "The graphics instance to display.",
            "itemtype": "property",
            "name": "graphics",
            "type": "Graphics",
            "class": "Shape",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 42,
            "description": "Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the Shape would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Shape",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 56,
            "description": "Draws the Shape into the specified context ignoring it's visible, alpha, shadow, and transform. Returns true if\nthe draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache. For example,\n used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Shape",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 73,
            "description": "Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted\nto their defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n cloned. If false, the Graphics instance will be shared with the new Shape.",
                    "type": "Boolean"
                }
            ],
            "class": "Shape",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Shape.js",
            "line": 87,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Shape",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 175,
            "description": "Dispatched when all images are loaded.  Note that this only fires if the images were not fully loaded when the\nsprite sheet was initialized. You should check the complete property to prior to adding a listener.\n\n<h4>Example</h4>\n    var sheet = new SpriteSheet(data);\n    if (!sheet.complete) {\n        // not preloaded, listen for onComplete:\n        sheet.addEventListener(\"complete\", handler);\n    }",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 191,
            "description": "Read-only property indicating whether all images are finished loading.",
            "itemtype": "property",
            "name": "complete",
            "type": "Boolean",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 199,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 205,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 211,
            "itemtype": "property",
            "name": "_images",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 217,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 223,
            "itemtype": "property",
            "name": "_loadCount",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 229,
            "itemtype": "property",
            "name": "_frameHeight",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 235,
            "itemtype": "property",
            "name": "_frameWidth",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 241,
            "itemtype": "property",
            "name": "_numFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 247,
            "itemtype": "property",
            "name": "_regX",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 253,
            "itemtype": "property",
            "name": "_regY",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 259,
            "description": "Returns the total number of frames in the specified animation, or in the whole sprite sheet if the animation param is omitted.",
            "itemtype": "method",
            "name": "getNumFrames",
            "params": [
                {
                    "name": "animation",
                    "description": "The name of the animation to get a frame count for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.",
                "type": "Number"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 275,
            "description": "Returns an array of all available animation names as strings.",
            "itemtype": "method",
            "name": "getAnimations",
            "return": {
                "description": "an array of animation names available on this sprite sheet.",
                "type": "Array"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 285,
            "description": "Returns an object defining the specified animation. The returned object has a frames property containing an array\nof the frame id's in the animation, a frequency property indicating the advance frequency for this animation,\na name property, and a next property, which specifies the default next animation. If the animation loops,\nthe name and next property will be the same.",
            "itemtype": "method",
            "name": "getAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a generic object with frames, frequency, name, and next properties.",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 299,
            "description": "Returns an object specifying the image and source rect of the specified frame. The returned object has an image\nproperty holding a reference to the image object in which the frame is found, and a rect property containing a\nRectangle instance which defines the boundaries for the frame within that image.",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a generic object with image and rect properties. Returns null if the frame does not exist, or the image is not fully loaded.",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 314,
            "description": "Returns a Rectangle instance defining the bounds of the specified frame relative to the origin. For example, a\n90 x 70 frame with a regX of 50 and a regY of 40 would return a rectangle with [x=-50, y=-40, width=90, height=70].",
            "itemtype": "method",
            "name": "getFrameBounds",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.",
                "type": "Rectangle"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 327,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 337,
            "description": "Returns a clone of the SpriteSheet instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the SpriteSheet instance.",
                "type": "SpriteSheet"
            },
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 358,
            "itemtype": "method",
            "name": "_handleImageLoad",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\SpriteSheet.js",
            "line": 370,
            "itemtype": "method",
            "name": "_calculateFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 37,
            "description": "Dispatched when the user moves the mouse over the canvas.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemousemove",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 44,
            "description": "Dispatched when the user releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemouseup",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 51,
            "description": "Dispatched when the user the user releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemouseup",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 58,
            "description": "Indicates whether the stage should automatically clear the canvas before each render. You can set this to false to manually\ncontrol clearing (for generative art, or when pointing multiple stages at the same canvas for example).",
            "itemtype": "property",
            "name": "autoClear",
            "type": "Boolean",
            "default": "true",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 68,
            "description": "The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\nfirst stage that will be ticked (or they will clear each other's render).",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement | Object",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 77,
            "description": "READ-ONLY. The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseX",
            "type": "Number",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 86,
            "description": "READ-ONLY. The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseY",
            "type": "Number",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 95,
            "description": "Indicates whether the mouse is currently within the bounds of the canvas.",
            "itemtype": "property",
            "name": "mouseInBounds",
            "type": "Boolean",
            "default": "false",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 104,
            "description": "If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\nYou can call",
            "itemtype": "property",
            "name": "tickOnUpdate",
            "type": "Boolean",
            "default": "true",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 114,
            "description": "If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\nmouseInBounds, and MouseEvent.x/y/rawX/rawY.",
            "itemtype": "property",
            "name": "mouseMoveOutside",
            "type": "Boolean",
            "default": "false",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 124,
            "description": "The hitArea property is not supported for Stage.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 131,
            "description": "Holds objects with data for each active pointer id. Each object has the following properties:\nx, y, event, target, overTarget, overX, overY, inBounds",
            "itemtype": "property",
            "name": "_pointerData",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 141,
            "description": "Number of active pointers.",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 150,
            "description": "Number of active pointers.",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 159,
            "itemtype": "property",
            "name": "_mouseOverIntervalID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 166,
            "description": "Each time the update method is called, the stage will tick any descendants exposing a tick method (ex. {{#crossLink \"BitmapAnimation\"}}{{/crossLink}})\nand render its entire display list to the canvas. Any parameters passed to update will be passed on to any onTick handlers.",
            "itemtype": "method",
            "name": "update",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 183,
            "description": "Default event handler that calls Stage.update() when a \"tick\" event is received. This allows you to register a\nStage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}} directly, using:\n\n     Ticker.addEventListener(\"tick\", myStage\");\n\nNote that if you subscribe to ticks using this pattern then the tick event object will be passed through to display\nobject tick handlers, instead of delta and paused parameters.",
            "itemtype": "property",
            "name": "handleEvent",
            "type": "Function",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 199,
            "description": "Clears the target canvas. Useful if <code>autoClear</code> is set to false.",
            "itemtype": "method",
            "name": "clear",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 211,
            "description": "Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can be\nspecified as the src value of an image element.",
            "itemtype": "method",
            "name": "toDataURL",
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "The background color to be used for the generated image. The value can be any value HTML color\n value, including HEX colors, rgb and rgba. The default value is a transparent background.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n is passed in, or if the browser does not support the specified MIME type, the default value will be used.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a Base64 encoded image.",
                "type": "String"
            },
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 255,
            "description": "Enables or disables (by passing a frequency of 0) mouse over events (mouseover and mouseout) for this stage's display\nlist. These events can be expensive to generate, so they are disabled by default, and the frequency of the events\ncan be controlled independently of mouse move events via the optional <code>frequency</code> parameter.",
            "itemtype": "method",
            "name": "enableMouseOver",
            "params": [
                {
                    "name": "frequency",
                    "description": "Optional param specifying the maximum number of times per second to broadcast\n mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n responsive, but uses less CPU.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "20"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 275,
            "description": "Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas).\nIt is good practice to disable events when disposing of a Stage instance, otherwise the stage will\ncontinue to receive events from the page.",
            "itemtype": "method",
            "name": "enableDOMEvents",
            "params": [
                {
                    "name": "enable",
                    "description": "Indicates whether to enable or disable the events. Default is true.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 308,
            "description": "Returns a clone of this Stage.",
            "return": {
                "description": "A clone of the current Container instance.",
                "type": "Stage"
            },
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 319,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 329,
            "itemtype": "method",
            "name": "_getPointerData",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 344,
            "itemtype": "method",
            "name": "_handleMouseMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 354,
            "itemtype": "method",
            "name": "_handlePointerMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 381,
            "itemtype": "method",
            "name": "_updatePointerPosition",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 413,
            "itemtype": "method",
            "name": "_getElementRect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 439,
            "itemtype": "method",
            "name": "_handleMouseUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 448,
            "itemtype": "method",
            "name": "_handlePointerUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "clear",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 479,
            "itemtype": "method",
            "name": "_handleMouseDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 488,
            "itemtype": "method",
            "name": "_handlePointerDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 514,
            "itemtype": "method",
            "name": "_testMouseOver",
            "access": "protected",
            "tagname": "",
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Stage.js",
            "line": 546,
            "itemtype": "method",
            "name": "_handleDoubleClick",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 39,
            "description": "The text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 47,
            "description": "The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 55,
            "description": "The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 63,
            "description": "The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\nFor detailed information view the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">whatwg spec</a>. Default is \"left\".",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 73,
            "description": "The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\nFor detailed information view the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">whatwg spec</a>. Default is \"top\".",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 83,
            "description": "The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or shrunk to make it fit in this width.\nFor detailed information view the:\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">whatwg spec</a>.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 93,
            "description": "If true, the text will be drawn as a stroke (outline). If false, the text will be drawn as a fill.",
            "itemtype": "property",
            "name": "outline",
            "type": "Boolean",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 101,
            "description": "Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\nthe value of getMeasuredLineHeight is used.",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 110,
            "description": "Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\nthe text will not be wrapped.",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 119,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 133,
            "description": "Draws the Text into the specified context ignoring it's visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNote: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\n For example, used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 154,
            "description": "Returns the measured, untransformed width of the text without wrapping.",
            "itemtype": "method",
            "name": "getMeasuredWidth",
            "return": {
                "description": "The measured, untransformed width of the text.",
                "type": "Number"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 164,
            "description": "Returns an approximate line height of the text, ignoring the lineHeight property. This is based\non the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.",
            "itemtype": "method",
            "name": "getMeasuredLineHeight",
            "return": {
                "description": "an approximate line height of the text, ignoring the lineHeight property. This is\n based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.",
                "type": "Number"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 176,
            "description": "Returns the approximate height of multiline text by multiplying the number of lines against either the lineHeight\n(if specified) or getMeasuredLineHeight(). Note that this operation requires the text flowing logic to run,\nwhich has an associated CPU cost.",
            "itemtype": "method",
            "name": "getMeasuredHeight",
            "return": {
                "description": "The approximate height of the drawn multiline text.",
                "type": "Number"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 188,
            "description": "Returns a clone of the Text instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Text instance.",
                "type": "Text"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 200,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 210,
            "itemtype": "method",
            "name": "cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 225,
            "itemtype": "method",
            "name": "_getWorkingContext",
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 237,
            "description": "Draws multiline text.",
            "itemtype": "method",
            "name": "_getWorkingContext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The number of lines drawn.",
                "type": "Number"
            },
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 276,
            "itemtype": "method",
            "name": "_drawTextLine",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "Text"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\display\\Text.js",
            "line": 293,
            "itemtype": "property",
            "name": "_workingContext",
            "type": "CanvasRenderingContext2D",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 32,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 39,
            "description": "Adds the specified event listener.",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\n the event is dispatched.",
                    "type": "Function | Object"
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 58,
            "description": "Removes the specified event listener.",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                }
            ],
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 79,
            "description": "Removes all listeners for the specified type, or all listeners of all types.",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 90,
            "description": "Dispatches the specified event.",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type. If a string is used,\n dispatchEvent will contstruct a generic event object with \"type\" and \"params\" properties.",
                    "type": "Object | String"
                },
                {
                    "name": "target",
                    "description": "The object to use as the target property of the event object. This will default to the\n dispatching object.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns true if any listener returned true.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 120,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 132,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\EventDispatcher.js",
            "line": 141,
            "description": "Static initializer to mix in EventDispatcher methods.",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\n prototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 35,
            "description": "For MouseEvent objects of type \"mousedown\", mousemove events will be dispatched from the event object until the\nuser releases the mouse anywhere. This enables you to listen to mouse move interactions for the duration of a\npress, which can be very useful for operations such as drag and drop.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mousemove",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 44,
            "description": "For MouseEvent objects of type \"mousedown\", a mouseup event will be dispatched from the event object when the\nuser releases the mouse anywhere. This enables you to listen for a corresponding mouse up from a specific press,\nwhich can be very useful for operations such as drag and drop.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseup",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 53,
            "description": "The normalized x position on the stage. This will always be within the range 0 to stage width.",
            "itemtype": "property",
            "name": "stageX",
            "type": "Number",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 61,
            "description": "The normalized y position on the stage. This will always be within the range 0 to stage height.",
            "itemtype": "property",
            "name": "stageY",
            "type": "Number",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 69,
            "description": "The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawX",
            "type": "Number",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 78,
            "description": "The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawY",
            "type": "Number",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 87,
            "description": "The type of mouse event. This will be the same as the handler it maps to (onPress,\nonMouseDown, onMouseUp, onMouseMove, or onClick).",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 96,
            "description": "The native MouseEvent generated by the browser. The properties and API for this\nevent may differ between browsers. This property will be null if the\nEaselJS property was not directly generated from a native MouseEvent.",
            "itemtype": "property",
            "name": "nativeEvent",
            "type": "MouseEvent",
            "default": "null",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 107,
            "description": "The display object this event relates to.",
            "itemtype": "property",
            "name": "target",
            "type": "DisplayObject",
            "default": "null",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 116,
            "description": "The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\nsupplied id value.",
            "itemtype": "property",
            "name": "pointerID",
            "type": "{Number}",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 125,
            "description": "Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\nFor touch pointers, the first pointer in the current stack will be considered the primary pointer.",
            "itemtype": "property",
            "name": "primary",
            "type": "{Boolean}",
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 134,
            "description": "Returns a clone of the MouseEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the MouseEvent instance.",
                "type": "MouseEvent"
            },
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\events\\MouseEvent.js",
            "line": 145,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "MouseEvent",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "line": 24,
            "description": "The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\ndimensions as the target.",
            "itemtype": "property",
            "name": "alphaMap",
            "type": "Image",
            "class": "AlphaMapFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "line": 36,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AlphaMapFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "line": 72,
            "description": "Returns a clone of this object.",
            "return": {
                "description": "A clone of the current AlphaMapFilter instance.",
                "type": "AlphaMapFilter"
            },
            "class": "AlphaMapFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js",
            "line": 81,
            "description": "Returns a string representation of this object.",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "AlphaMapFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "line": 25,
            "description": "The image (or canvas) to use as the mask.",
            "itemtype": "property",
            "name": "mask",
            "type": "Image",
            "class": "AlphaMaskFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "line": 33,
            "description": "Applies the filter to the specified context. IMPORTANT NOTE: This filter currently does not support the targetCtx,\nor targetX/Y parameters correctly.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AlphaMaskFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "line": 64,
            "description": "Returns a clone of this object.",
            "return": {
                "description": "",
                "type": "AlphaMaskFilter"
            },
            "class": "AlphaMaskFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js",
            "line": 73,
            "description": "Returns a string representation of this object.",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "AlphaMaskFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 34,
            "description": "Horizontal blur radius",
            "itemtype": "property",
            "name": "blurX",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 42,
            "description": "Vertical blur radius",
            "itemtype": "property",
            "name": "blurY",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 50,
            "description": "Number of blur iterations. For example, a value of 1 will produce a rough blur.\nA value of 2 will produce a smoother blur, but take twice as long to run.",
            "itemtype": "property",
            "name": "quality",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 59,
            "description": "Returns a rectangle with values indicating the margins required to draw the filter.\nFor example, a filter that will extend the drawing area 4 pixels to the left, and 7 pixels to the right\n(but no pixels up or down) would return a rectangle with (x=-4, y=0, width=11, height=0).",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "a rectangle object indicating the margins required to draw the filter.",
                "type": "Rectangle"
            },
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 72,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 205,
            "description": "Returns a clone of this object.",
            "return": {
                "description": "",
                "type": "BoxBlurFilter"
            },
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js",
            "line": 214,
            "description": "Returns a string representation of this object.",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "BoxBlurFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 34,
            "description": "Red channel multiplier.",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 42,
            "description": "Green channel multiplier.",
            "itemtype": "property",
            "name": "greenMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 50,
            "description": "Blue channel multiplier.",
            "itemtype": "property",
            "name": "blueMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 58,
            "description": "Alpha channel multiplier.",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 66,
            "description": "Red channel offset (added to value).",
            "itemtype": "property",
            "name": "redOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 74,
            "description": "Green channel offset (added to value).",
            "itemtype": "property",
            "name": "greenOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 82,
            "description": "Blue channel offset (added to value).",
            "itemtype": "property",
            "name": "blueOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 90,
            "description": "Alpha channel offset (added to value).",
            "itemtype": "property",
            "name": "alphaOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 98,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 135,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorFilter.js",
            "line": 145,
            "description": "Returns a clone of this ColorFilter instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current ColorFilter instance.",
                "type": "ColorFilter"
            },
            "class": "ColorFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 28,
            "description": "Resets the matrix to identity values.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 38,
            "description": "Shortcut method to adjust brightness, contrast, saturation and hue.\nEquivalent to calling adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation), in that order.",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 56,
            "description": "Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\nPositive values will make the image brighter, negative values will make it darker.",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -255 & 255 that will be added to the RGB channels.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 76,
            "description": "Adjusts the contrast of pixel color.\nPositive values will increase contrast, negative values will decrease contrast.",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 108,
            "description": "Adjusts the color saturation of the pixel.\nPositive values will increase saturation, negative values will decrease saturation (trend towards greyscale).",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 132,
            "description": "Adjusts the hue of the pixel color.",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -180 & 180.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 159,
            "description": "Concatenates (multiplies) the specified matrix with this one.",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 172,
            "description": "Returns a clone of this ColorMatrix.",
            "return": {
                "description": "A clone of this ColorMatrix.",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 181,
            "description": "Return a length 25 (5x5) array instance containing this matrix's values.",
            "return": {
                "description": "An array holding this matrix's values.",
                "type": "Array"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 189,
            "description": "Copy the specified matrix's values to this matrix.",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 203,
            "itemtype": "method",
            "name": "_multiplyMatrix",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 223,
            "description": "Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.",
            "itemtype": "method",
            "name": "_cleanValue",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 233,
            "description": "Makes sure matrixes are 5x5 (25 long).",
            "itemtype": "method",
            "name": "_fixMatrix",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 250,
            "description": "Array of delta values for contrast calculations.",
            "itemtype": "property",
            "name": "DELTA_INDEX",
            "type": "Array",
            "static": 1,
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 271,
            "description": "Identity matrix values.",
            "itemtype": "property",
            "name": "IDENTITY_MATRIX",
            "type": "Array",
            "static": 1,
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js",
            "line": 286,
            "description": "The constant length of a color matrix.",
            "itemtype": "property",
            "name": "LENGTH",
            "type": "Number",
            "static": 1,
            "class": "ColorMatrix",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js",
            "line": 23,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ColorMatrixFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js",
            "line": 70,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "ColorMatrixFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrixFilter.js",
            "line": 80,
            "description": "Returns a clone of this ColorMatrixFilter instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current ColorMatrixFilter instance.",
                "type": "ColorMatrixFilter"
            },
            "class": "ColorMatrixFilter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "line": 33,
            "description": "Returns a rectangle with values indicating the margins required to draw the filter.\nFor example, a filter that will extend the drawing area 4 pixels to the left, and 7 pixels to the right\n(but no pixels up or down) would return a rectangle with (x=-4, y=0, width=11, height=0).",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "a rectangle object indicating the margins required to draw the filter.",
                "type": "Rectangle"
            },
            "class": "Filter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "line": 45,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "Optional. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Filter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "line": 61,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Filter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\filters\\Filter.js",
            "line": 71,
            "description": "Returns a clone of this Filter instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Filter instance.",
                "type": "Filter"
            },
            "class": "Filter",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 26,
            "description": "Position (0, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 34,
            "description": "Position (0, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 42,
            "description": "Position (1, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "c",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 50,
            "description": "Position (1, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "d",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 58,
            "description": "Position (2, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "atx",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 66,
            "description": "Position (2, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "ty",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 74,
            "description": "Property representing the alpha that will be applied to a display object. This is not part of matrix\noperations, but is used for operations like getConcatenatedMatrix to provide concatenated alpha values.",
            "itemtype": "property",
            "name": "alpha",
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 83,
            "description": "Property representing the shadow that will be applied to a display object. This is not part of matrix\noperations, but is used for operations like getConcatenatedMatrix to provide concatenated shadow values.",
            "itemtype": "property",
            "name": "shadow",
            "type": "Shadow",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 92,
            "description": "Property representing the compositeOperation that will be applied to a display object. This is not part of\nmatrix operations, but is used for operations like getConcatenatedMatrix to provide concatenated\ncompositeOperation values. You can find a list of valid composite operations at:\n<a href=\"https://developer.mozilla.org/en/Canvas_tutorial/Compositing\">https://developer.mozilla.org/en/Canvas_tutorial/Compositing</a>",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "String",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 103,
            "description": "Concatenates the specified matrix properties with this matrix. All parameters are required.",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 130,
            "description": "Appends the specified matrix properties with this matrix. All parameters are required.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 156,
            "description": "Prepends the specified matrix with this matrix.",
            "itemtype": "method",
            "name": "prependMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 168,
            "description": "Appends the specified matrix with this matrix.",
            "itemtype": "method",
            "name": "appendMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 181,
            "description": "Generates matrix properties from the specified display object transform properties, and prepends them with this matrix.\nFor example, you can use this to generate a matrix from a display object: var mtx = new Matrix2D();\nmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "prependTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 224,
            "description": "Generates matrix properties from the specified display object transform properties, and appends them with this matrix.\nFor example, you can use this to generate a matrix from a display object: var mtx = new Matrix2D();\nmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "appendTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 267,
            "description": "Applies a rotation transformation to the matrix.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "The angle in degrees.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 288,
            "description": "Applies a skew transformation to the matrix.",
            "itemtype": "method",
            "name": "skew",
            "params": [
                {
                    "name": "skewX",
                    "description": "The amount to skew horizontally in degrees.",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "The amount to skew vertically in degrees.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 303,
            "description": "Applies a scale transformation to the matrix.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 319,
            "description": "Translates the matrix on the x and y axes.",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 333,
            "description": "Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 346,
            "description": "Inverts the matrix, causing it to perform the opposite transformation.",
            "itemtype": "method",
            "name": "invert",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 367,
            "description": "Returns true if the matrix is an identity matrix.",
            "itemtype": "method",
            "name": "isIdentity",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 377,
            "description": "Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that this these values\nmay not match the transform properties you used to generate the matrix, though they will produce the same visual\nresults.",
            "itemtype": "method",
            "name": "decompose",
            "params": [
                {
                    "name": "target",
                    "description": "The object to apply the transform properties to. If null, then a new object will be returned.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 409,
            "description": "Reinitializes all matrix properties to those specified.",
            "itemtype": "method",
            "name": "appendProperties",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 432,
            "description": "Appends the specified visual properties to the current matrix.",
            "itemtype": "method",
            "name": "appendProperties",
            "params": [
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 448,
            "description": "Prepends the specified visual properties to the current matrix.",
            "itemtype": "method",
            "name": "prependProperties",
            "params": [
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 464,
            "description": "Returns a clone of the Matrix2D instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Matrix2D instance.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 478,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 489,
            "description": "Multiplier for converting degrees to radians. Used internally by Matrix2D. Read-only.",
            "itemtype": "property",
            "name": "DEG_TO_RAD",
            "static": 1,
            "final": 1,
            "type": "Number",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Matrix2D.js",
            "line": 499,
            "description": "An identity matrix, representing a null transformation. Read-only.",
            "itemtype": "property",
            "name": "identity",
            "static": 1,
            "type": "Matrix2D",
            "class": "Matrix2D",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "line": 20,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Point",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "line": 28,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Point",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "line": 36,
            "description": "Returns a clone of the Point instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Point instance.",
                "type": "Point"
            },
            "class": "Point",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Point.js",
            "line": 46,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Point",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 24,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 32,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 40,
            "description": "Width.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 48,
            "description": "Height.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 56,
            "description": "Returns a clone of the Rectangle instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Rectangle instance.",
                "type": "Rectangle"
            },
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\geom\\Rectangle.js",
            "line": 66,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Rectangle",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 3,
            "description": "The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n{{#crossLink \"BitmapAnimation\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\nautomatically call {{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}},\nto the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\nThe ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\ngarbage collection.\n\n<h4>Example</h4>\n    var helper = new ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");",
            "params": [
                {
                    "name": "target",
                    "description": "The instance to manage.",
                    "type": "BitmapAnimation|MovieClip"
                },
                {
                    "name": "outLabel",
                    "description": "The label or animation to go to when the user rolls out of the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"out\""
                },
                {
                    "name": "overLabel",
                    "description": "The label or animation to go to when the user rolls over the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"over\""
                },
                {
                    "name": "downLabel",
                    "description": "The label or animation to go to when the user presses the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"down\""
                },
                {
                    "name": "play",
                    "description": "If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n states.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "hitArea",
                    "description": "An optional item to use as the hit state for the button. If this is not defined,\n then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n used for the hitState.",
                    "type": "DisplayObject",
                    "optional": true
                },
                {
                    "name": "hitLabel",
                    "description": "The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n null, then the default state of the hitArea will be used.",
                    "type": "String",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 48,
            "description": "Read-only. The target for this button helper.",
            "itemtype": "property",
            "name": "target",
            "type": "MovieClip | BitmapAnimation",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 56,
            "description": "The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".",
            "itemtype": "property",
            "name": "overLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 64,
            "description": "The label name or frame number to display when the user mouses over the target. Defaults to \"out\".",
            "itemtype": "property",
            "name": "outLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 72,
            "description": "The label name or frame number to display when the user presses on the target. Defaults to \"down\".",
            "itemtype": "property",
            "name": "downLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 80,
            "description": "If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.",
            "itemtype": "property",
            "name": "play",
            "default": "false",
            "type": "Boolean",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 89,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 96,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 103,
            "description": "Enables or disables the button functionality on the target.",
            "itemtype": "method",
            "name": "setEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 122,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js",
            "line": 132,
            "itemtype": "method",
            "name": "handleEvent",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 26,
            "description": "Returns true if touch is supported in the current browser.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "Indicates whether touch is supported in the current browser.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 38,
            "description": "Enables touch interaction for the specified EaselJS stage. Currently supports iOS (and compatible browsers, such\nas modern Android browsers), and IE10.\nSupports both single touch and multi-touch modes. Extends the EaselJS MouseEvent model, but without support for\ndouble click or over/out events. See MouseEvent.pointerID for more information.",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "stage",
                    "description": "The stage to enable touch on.",
                    "type": "Stage"
                },
                {
                    "name": "singleTouch",
                    "description": "If true, only a single touch will be active at a time.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "allowDefault",
                    "description": "If true, then default gesture actions (ex. scrolling, zooming) will be\n allowed when the user is interacting with the target canvas.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns true if touch was successfully enabled on the target stage.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 63,
            "description": "Removes all listeners that were set up when calling Touch.enable on a stage.",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "stage",
                    "description": "The stage to disable touch on.",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 76,
            "itemtype": "method",
            "name": "_IOS_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 91,
            "itemtype": "method",
            "name": "_IOS_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 107,
            "itemtype": "method",
            "name": "_IOS_handleEvent",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 131,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 148,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 164,
            "itemtype": "method",
            "name": "_IE_handleEvent",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 189,
            "itemtype": "method",
            "name": "_handleStart",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 203,
            "itemtype": "method",
            "name": "_handleMove",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\ui\\Touch.js",
            "line": 212,
            "itemtype": "method",
            "name": "_handleEnd",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 12,
            "description": "Read-only. Output no messages.",
            "type": "Number",
            "itemtype": "property",
            "name": "NONE",
            "default": "0",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 22,
            "description": "Read-only. Error messages.",
            "type": "Number",
            "itemtype": "property",
            "name": "ERROR",
            "default": "1",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 32,
            "description": "Read-only. Warning messages.",
            "type": "Number",
            "itemtype": "property",
            "name": "WARNING",
            "default": "2",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 42,
            "description": "Read-only. Trace messages.",
            "type": "Number",
            "itemtype": "property",
            "name": "TRACE",
            "default": "3",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 52,
            "description": "Read-only. Output all messages.",
            "type": "Number",
            "itemtype": "property",
            "name": "ALL",
            "default": "255",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 62,
            "description": "Defines the function that will be used to handle any logged messages. By default it will use console.log. The\nspecified function will be passed the same three parameters as Log.log, but the message will\nbe expanded if a matching key was found.\n\nFor example, you could use this to log any messages to a server, or output it to a TextArea. You can disable all\nlogging by setting this to null.\n\nAll messages are passed to the out function regardless of level settings, and the function must handle the level\nappropriately. This is to allow, for example, functions that log all messages to a server, but only display\nmessages under the current level in the UI.",
            "type": "Function",
            "itemtype": "property",
            "name": "out",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 85,
            "description": "Specifies the level of messages to output. For example, if you set <code>Log.level = Log.WARNING</code>, then any\nmessages with a level of 2 (Log.WARNING) or less (ex. Log.ERROR) will be output. Defaults to Log.ALL.",
            "type": "Function",
            "itemtype": "property",
            "name": "out",
            "default": "255",
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 96,
            "itemtype": "property",
            "name": "_keys",
            "static": 1,
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 104,
            "description": "Adds a definition object that associates one or more keys with longer messages.\nThese messages can optionally include \"%DETAILS%\" which will be replaced by any details passed with the error.\n\n<h4>Example</h4>\n    Log.addKeys({MY_ERROR: \"This is a description of my error [%DETAILS%]\"});\n    Log.error(\"MY_ERROR\", 5); // outputs \"This is a description of my error [5]\"",
            "itemtype": "method",
            "name": "addKeys",
            "params": [
                {
                    "name": "keys",
                    "description": "The generic object defining the keys and messages.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Log.js",
            "line": 120,
            "description": "Outputs the specified error via the method assigned to the \"out\" property. If the error matches a key in any of the\nloaded def objects, it will substitute that message.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The error message or key to output.",
                    "type": "String"
                },
                {
                    "name": "details",
                    "description": "Any details associated with this message.",
                    "type": "Object"
                },
                {
                    "name": "level",
                    "description": "A number between 1 and 254 specifying the severity of this message. See Log.level for details.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "class": "Log",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 28,
            "description": "Dispatched when a build completes.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 36,
            "description": "Dispatched when an asynchronous build has progress.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "progress",
                    "description": "The current progress value (0-1).",
                    "type": "Number"
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 45,
            "description": "The maximum width for the images (not individual frames) in the generated sprite sheet. It is recommended to use\na power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max dimensions, then\nadditional images will be created as needed.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "default": "2048",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 56,
            "description": "The maximum height for the images (not individual frames) in the generated sprite sheet. It is recommended to use\na power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max dimensions, then\nadditional images will be created as needed.",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "Number",
            "default": "2048",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 67,
            "description": "The sprite sheet that was generated. This will be null before a build is completed successfully.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 75,
            "description": "The scale to apply when drawing all frames to the sprite sheet. This is multiplied against any scale specified\nin the addFrame call. This can be used, for example, to generate a sprite sheet at run time that is tailored to\nthe a specific device resolution (ex. tablet vs mobile).",
            "itemtype": "property",
            "name": "defaultScale",
            "type": "Number",
            "default": "1",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 86,
            "description": "The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.",
            "itemtype": "property",
            "name": "padding",
            "type": "Number",
            "default": "1",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 95,
            "description": "A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\nthought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\nthe builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\nDefaults to 0.3.",
            "itemtype": "property",
            "name": "timeSlice",
            "type": "Number",
            "default": "0.3",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 107,
            "description": "Read-only. A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\nbeen initiated.",
            "itemtype": "property",
            "name": "progress",
            "type": "Number",
            "default": "-1",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 117,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 124,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 131,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 138,
            "itemtype": "property",
            "name": "_nextFrameIndex",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 145,
            "itemtype": "property",
            "name": "_index",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 152,
            "itemtype": "property",
            "name": "_timerID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 159,
            "itemtype": "property",
            "name": "_scale",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 166,
            "description": "Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\ncall {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\na function run immediately before the draw occurs. For example, this allows you to add a single source multiple\ntimes, but manipulate it or it's children to change it to generate different frames.\n\nNote that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\ntransforms to a source object and have them captured in the sprite sheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\nand pass in the Container as the source.",
            "itemtype": "method",
            "name": "addFrame",
            "params": [
                {
                    "name": "source",
                    "description": "The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.",
                    "type": "DisplayObject"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n source to draw to the frame. If not specified, it will look for a <code>getBounds</code> method, bounds property,\n or <code>nominalBounds</code> property on the source to use. If one is not found, the frame will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "Optional. The scale to draw this frame at. Default is 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "Optional. A function to call immediately before drawing this frame.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupParams",
                    "description": "Parameters to pass to the setup function.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "setupScope",
                    "description": "The scope to call the setupFunction in.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The index of the frame that was just added, or null if a sourceRect could not be determined.",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 197,
            "description": "Adds an animation that will be included in the created sprite sheet.",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name for the animation.",
                    "type": "String"
                },
                {
                    "name": "frames",
                    "description": "An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n that played frame indexes 3, 6, and 5 in that order.",
                    "type": "Array"
                },
                {
                    "name": "next",
                    "description": "Specifies the name of the animation to continue to after this animation ends. You can\n also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "frequency",
                    "description": "Specifies a frame advance frequency for this animation. For example, a value\n of 2 would cause the animation to advance every second tick.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 214,
            "description": "This will take a MovieClip, and add its frames and labels to this builder. Labels will be added as an animation\nrunning from the label index to the next label. For example, if there is a label named \"foo\" at frame 0 and a label\nnamed \"bar\" at frame 10, in a MovieClip with 15 frames, it will add an animation named \"foo\" that runs from frame\nindex 0 to 9, and an animation named \"bar\" that runs from frame index 10 to 14.\n\nNote that this will iterate through the full MovieClip with actionsEnabled set to false, ending on the last frame.",
            "itemtype": "method",
            "name": "addMovieClip",
            "params": [
                {
                    "name": "source",
                    "description": "The source MovieClip to add to the sprite sheet.",
                    "type": "MovieClip"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n draw to the frame. If not specified, it will look for a <code>getBounds</code> method, <code>frameBounds</code>\n Array, <code>bounds</code> property, or <code>nominalBounds</code> property on the source to use. If one is not\n found, the MovieClip will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "The scale to draw the movie clip at.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 265,
            "description": "Builds a SpriteSheet instance based on the current frames.",
            "itemtype": "method",
            "name": "build",
            "return": {
                "description": "SpriteSheet The created SpriteSheet instance, or null if a build is already running or an error occurred."
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 279,
            "description": "Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\nrun 20 times per second, using an amount of time defined by <code>timeSlice</code>. When it is complete it will\ncall the specified callback.",
            "itemtype": "method",
            "name": "buildAsync",
            "params": [
                {
                    "name": "timeSlice",
                    "description": "Sets the timeSlice property on this instance.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 296,
            "description": "Stops the current asynchronous build.",
            "itemtype": "method",
            "name": "stopAsync",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 306,
            "description": "SpriteSheetBuilder instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 315,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 325,
            "itemtype": "method",
            "name": "_startBuild",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 363,
            "itemtype": "method",
            "name": "_fillRow",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 374,
            "itemtype": "method",
            "name": "_fillRow",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 409,
            "itemtype": "method",
            "name": "_endBuild",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 420,
            "itemtype": "method",
            "name": "_run",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetBuilder.js",
            "line": 444,
            "itemtype": "method",
            "name": "_drawNext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean Returns false if this is the last draw."
            },
            "class": "SpriteSheetBuilder",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 16,
            "itemtype": "property",
            "name": "_workingCanvas",
            "static": 1,
            "type": "HTMLCanvasElement | Object",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetUtils",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 24,
            "itemtype": "property",
            "name": "_workingContext",
            "static": 1,
            "type": "CanvasRenderingContext2D",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetUtils",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 32,
            "description": "<b>This is an experimental method, and may be buggy. Please report issues.</b>\n\nExtends the existing sprite sheet by flipping the original frames horizontally, vertically, or both,\nand adding appropriate animation & frame data. The flipped animations will have a suffix added to their names\n(_h, _v, _hv as appropriate). Make sure the sprite sheet images are fully loaded before using this method.\n\n<h4>Example</h4>\n    SpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\n\nThe above would add frames that are flipped horizontally AND frames that are flipped vertically.\n\nNote that you can also flip any display object by setting its scaleX or scaleY to a negative value. On some\nbrowsers (especially those without hardware accelerated canvas) this can result in slightly degraded performance,\nwhich is why addFlippedFrames is available.",
            "itemtype": "method",
            "name": "addFlippedFrames",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                },
                {
                    "name": "horizontal",
                    "description": "If true, horizontally flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "vertical",
                    "description": "If true, vertically flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "both",
                    "description": "If true, frames that are flipped both horizontally and vertically will be added.",
                    "type": "Boolean"
                }
            ],
            "class": "SpriteSheetUtils",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 63,
            "description": "Returns a single frame of the specified sprite sheet as a new PNG image. Note that in almost all cases it is better\nto display a single frame using a paused instance of BitmapAnimation, than it is to slice out a frame using this\nmethod and display it with a Bitmap instance.",
            "itemtype": "method",
            "name": "extractFrame",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The SpriteSheet instance to extract a frame from.",
                    "type": "Image"
                },
                {
                    "name": "frame",
                    "description": "The frame number or animation name to extract. If an animation\n name is specified, only the first frame of the animation will be extracted.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a single frame of the specified sprite sheet as a new PNG image.",
                "type": "Image"
            },
            "class": "SpriteSheetUtils",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\SpriteSheetUtils.js",
            "line": 91,
            "description": "Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\nJPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\nimages (those with detail that lend itself to JPEG compression) this can provide significant file size savings\nversus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).",
            "itemtype": "method",
            "name": "mergeAlpha",
            "static": 1,
            "params": [
                {
                    "name": "rgbImage",
                    "description": "The image (or canvas) containing the RGB channels to use.",
                    "type": "Image"
                },
                {
                    "name": "alphaImage",
                    "description": "The image (or canvas) containing the alpha channel to use.",
                    "type": "Image"
                },
                {
                    "name": "canvas",
                    "description": "Optional. If specified, this canvas will be used and returned. If not, a new canvas will be created.",
                    "type": "Canvas"
                }
            ],
            "return": {
                "description": "A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.",
                "type": "Canvas"
            },
            "class": "SpriteSheetUtils",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 27,
            "description": "Dispatched each tick.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n you could determine the amount of time that the Ticker has been paused since initialization with time-runTime.",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 40,
            "description": "Indicates whether Ticker should use requestAnimationFrame if it is supported in the browser. If false, Ticker\nwill use setTimeout. If you use RAF, it is recommended that you set the framerate to a divisor of 60 (ex. 15,\n20, 30, 60).",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 52,
            "itemtype": "property",
            "name": "_listeners",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 59,
            "itemtype": "property",
            "name": "_pauseable",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 66,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 73,
            "itemtype": "property",
            "name": "_inited",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 80,
            "itemtype": "property",
            "name": "_startTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 87,
            "itemtype": "property",
            "name": "_pausedTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 94,
            "description": "Number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 103,
            "description": "Number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 112,
            "itemtype": "property",
            "name": "_interval",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 119,
            "itemtype": "property",
            "name": "_lastTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 126,
            "itemtype": "property",
            "name": "_times",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 133,
            "itemtype": "property",
            "name": "_tickTimes",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 140,
            "itemtype": "property",
            "name": "_rafActive",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 147,
            "itemtype": "property",
            "name": "_timeoutID",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 154,
            "description": "Adds a listener for the tick event. The listener must be either an object exposing a <code>tick</code> method,\nor a function. The listener will be called once each tick / interval. The interval is specified via the .setInterval(ms) method.\nThe tick method or function is passed two parameters: the elapsed time between the previous tick and the current\none, and a boolean indicating whether Ticker is paused.",
            "itemtype": "method",
            "name": "addListener",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The object or function to add as a listener.",
                    "type": "Object"
                },
                {
                    "name": "pauseable",
                    "description": "If false, the listener will continue to have tick called\n even when Ticker is paused via Ticker.pause(). Default is true.",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "In favour of the \"tick\" event. Will be removed in a future version.",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 174,
            "description": "Initializes or resets the timer, clearing all associated listeners and fps measuring data, starting the tick.\nThis is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 191,
            "description": "Removes the specified listener.",
            "itemtype": "method",
            "name": "removeListener",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The object or function to remove from listening from the tick event.",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "In favour of the \"tick\" event. Will be removed in a future version.",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 209,
            "description": "Removes all listeners.",
            "itemtype": "method",
            "name": "removeAllListeners",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "In favour of the \"tick\" event. Will be removed in a future version.",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 221,
            "description": "Sets the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote actual time between ticks may be more than requested depending on CPU load.",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "Time in milliseconds between ticks. Default value is 50.",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 235,
            "description": "Returns the current target time between ticks, as set with setInterval.",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "The current target interval in milliseconds between tick events.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 246,
            "description": "Sets the target frame rate in frames per second (FPS). For example, with an interval of 40, getFPS() will\nreturn 25 (1000ms per second divided by 40 ms per tick = 25fps).",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Target number of ticks broadcast per second.",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 258,
            "description": "Returns the target frame rate in frames per second (FPS). For example, with an\ninterval of 40, getFPS() will return 25 (1000ms per second divided by 40 ms per tick = 25fps).",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "The current target number of frames / ticks broadcast per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 270,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "Optional. The number of previous ticks over which to measure the actual\n frames / ticks per second. Defaults to the number of ticks per second.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\n from the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 288,
            "description": "While Ticker is paused, pausable listeners are not ticked. See addListener for more information.",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether to pause (true) or unpause (false) Ticker.",
                    "type": "Boolean"
                }
            ],
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 299,
            "description": "Returns a boolean indicating whether Ticker is currently paused, as set with setPaused.",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "Whether the Ticker is currently paused.",
                "type": "Boolean"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 310,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized.\nFor example, you could use this in a time synchronized animation to determine the exact amount of\ntime that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\n If false, the value returned will be total time elapsed since the first tick event listener was added.\n The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 326,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\n while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n value. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 341,
            "itemtype": "method",
            "name": "_handleAF",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 354,
            "itemtype": "method",
            "name": "_handleTimeout",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 364,
            "itemtype": "method",
            "name": "_setupTick",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 382,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\Ticker.js",
            "line": 412,
            "itemtype": "method",
            "name": "_getTime",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js",
            "line": 14,
            "itemtype": "property",
            "name": "_nextID",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "UID",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\easeljs\\utils\\UID.js",
            "line": 21,
            "description": "Returns the next unique id.",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "The next unique id",
                "type": "Number"
            },
            "static": 1,
            "class": "UID",
            "module": "xc.createjs.easeljs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 54,
            "description": "The source of the tag pool.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 63,
            "description": "The total number of HTMLAudio tags in this pool. This is the maximum number of instance of a certain sound\nthat can play at one time.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 74,
            "description": "The number of unused HTMLAudio tags.",
            "itemtype": "property",
            "name": "available",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 84,
            "description": "A list of all available tags in the pool.",
            "itemtype": "property",
            "name": "tags",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 93,
            "description": "Add an HTMLAudio tag into the pool.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "tag",
                    "description": "A tag to be used for playback.",
                    "type": "HTMLAudioElement"
                }
            ],
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 105,
            "description": "Get an HTMLAudioElement for immediate playback. This takes it out of the pool.",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "An HTML audio tag.",
                "type": "HTMLAudioElement"
            },
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 123,
            "description": "Put an HTMLAudioElement back in the pool for use.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "tag",
                    "description": "HTML audio tag",
                    "type": "HTMLAudioElement"
                }
            ],
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 142,
            "description": "A hash lookup of each sound channel, indexed by the audio source.",
            "itemtype": "property",
            "name": "tags",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 151,
            "description": "Get a tag pool. If the pool doesn't exist, create it.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 167,
            "description": "Get a tag instance. This is a shortcut method.",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 183,
            "description": "Return a tag instance. This is a shortcut method.",
            "itemtype": "method",
            "name": "setInstance",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                },
                {
                    "name": "tag",
                    "description": "Audio tag to set.",
                    "type": "HTMLElement"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 200,
            "description": "HTMLAudioPlugin's SoundInstance implementation.",
            "class": "TagPool",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 411,
            "description": "The source to be loaded.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 421,
            "description": "The tag to load the source with / into.",
            "itemtype": "property",
            "name": "tag",
            "type": "{AudioTag}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 431,
            "description": "An intervale used to give us progress.",
            "itemtype": "property",
            "name": "preloadTimer",
            "type": "{String}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 444,
            "description": "Allows us to have preloading progress and tell when its done.",
            "itemtype": "method",
            "name": "preloadTick",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 460,
            "description": "Internal handler for when a tag is loaded.",
            "itemtype": "method",
            "name": "handleTagLoaded",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 470,
            "description": "Communicates back to Sound that a load is complete.",
            "itemtype": "method",
            "name": "sendLoadedEvent",
            "params": [
                {
                    "name": "evt",
                    "description": "The load Event",
                    "type": "Object"
                }
            ],
            "class": "HTMLAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 526,
            "description": "The capabilities of the plugin, created by the {{#crossLink \"HTMLAudioPlugin/generateCapabilities\"}}{{/crossLink}}\nmethod.",
            "itemtype": "property",
            "name": "capabilities",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 536,
            "description": "Object hash indexed by the source of each file to indicate if an audio source is loaded, or loading.",
            "itemtype": "property",
            "name": "audioSources",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 545,
            "description": "The default number of instances to allow. Passed back to {{#crossLink \"Sound\"}}{{/crossLink}} when a source\nis registered using the {{#crossLink \"Sound/register\"}}{{/crossLink}} method. This is only used if\na value is not provided.\n\n<b>NOTE this only exists as a limitation of HTML audio.</b>",
            "itemtype": "property",
            "name": "defaultNumChannels",
            "type": "{Number}",
            "default": "2",
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 558,
            "description": "Pre-register a sound instance when setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the audio",
                    "type": "String"
                },
                {
                    "name": "instances",
                    "description": "The number of concurrently playing instances to allow for the channel at any time.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A result object, containing a tag for preloading purposes and a numChannels value for internally\n controlling how many instances of a source can be played by default.",
                "type": "Object"
            },
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 582,
            "description": "Create an HTML audio tag.",
            "itemtype": "method",
            "name": "createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The source file to set for the audio tag.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an HTML audio tag.",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 598,
            "description": "Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "src",
                    "description": "The sound source to use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A sound instance for playback and control.",
                "type": "SoundInstance"
            },
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 616,
            "description": "Checks if preloading has started for a specific source.",
            "itemtype": "method",
            "name": "isPreloadStarted",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the preload has started.",
                "type": "Boolean"
            },
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 627,
            "description": "Internally preload a sound.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to load.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "An object containing a tag property that is an HTML audio tag used to load src.",
                    "type": "Object"
                }
            ],
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 643,
            "description": "The maximum number of instances that can be played. This is a browser limitation. The actual number varies from\nbrowser to browser (and is largely hardware dependant), but this is a safe estimate.",
            "itemtype": "property",
            "name": "MAX_INSTANCES",
            "type": "{Number}",
            "default": "30",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 654,
            "description": "The capabilities of the plugin. This is generated via the the SoundInstance {{#crossLink \"HTMLAudioPlugin/generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\nof the available properties.",
            "itemtype": "property",
            "name": "capabilities",
            "type": "{Object}",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 665,
            "description": "Event constant for the \"canPlayThrough\" event for cleaner code.",
            "itemtype": "property",
            "name": "AUDIO_READY",
            "type": "{String}",
            "default": "canplaythrough",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 675,
            "description": "Event constant for the \"ended\" event for cleaner code.",
            "itemtype": "property",
            "name": "AUDIO_ENDED",
            "type": "{String}",
            "default": "ended",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 685,
            "description": "Event constant for the \"error\" event for cleaner code.",
            "itemtype": "property",
            "name": "AUDIO_ERROR",
            "type": "{String}",
            "default": "error",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 695,
            "description": "Event constant for the \"stalled\" event for cleaner code.",
            "itemtype": "property",
            "name": "AUDIO_STALLED",
            "type": "{String}",
            "default": "stalled",
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 705,
            "description": "Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\nbrowsers except iOS, where it is limited.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js",
            "line": 724,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "generateCapabiities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "HTMLAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 68,
            "description": "The character (or characters) that are used to split multiple paths from an audio source.",
            "itemtype": "property",
            "name": "DELIMITER",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 77,
            "description": "The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\nleast distance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_EARLY",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 87,
            "description": "The interrupt value to interrupt the currently playing instance with the same source that progressed the most\ndistance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_LATE",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 97,
            "description": "The interrupt value to interrupt no currently playing instances with the same source, if the maximum number of\ninstances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_NONE",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 107,
            "description": "Defines the playState of an instance that is currently playing or paused.",
            "itemtype": "property",
            "name": "PLAY_SUCCEEDED",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 116,
            "description": "Defines the playState of an instance that was interrupted by another instance.",
            "itemtype": "property",
            "name": "PLAY_INTERRUPTED",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 125,
            "description": "Defines the playState of an instance that completed playback.",
            "itemtype": "property",
            "name": "PLAY_FINISHED",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 134,
            "description": "Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\nwhen the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.",
            "itemtype": "property",
            "name": "PLAY_FAILED",
            "type": "{String}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 144,
            "description": "A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\ncan play these types, so modifying this list before a plugin is initialized will allow the plugins to try and\nsupport additional media types.\n\nMore details on file formats can be found at http://en.wikipedia.org/wiki/Audio_file_format. A very detailed\nlist of file formats can be found //http://www.fileinfo.com/filetypes/audio. A useful list of extensions for a\nformat can be found at http://html5doctor.com/html5-audio-the-state-of-play/",
            "itemtype": "property",
            "name": "SUPPORTED_EXTENSIONS",
            "type": "{Array[String]}",
            "default": "[\"mp3\", \"ogg\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 160,
            "description": "Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\nthat support so plugins can accurately determine if an extension is supported.  Adding to this list can help\nplugins determine more accurately if an extension is supported.",
            "itemtype": "property",
            "name": "EXTENSION_MAP",
            "type": "{Object}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 173,
            "description": "The RegExp pattern to use to parse file URIs. This supports simple file names, as well as full domain URIs with\nquery strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query string:$6.",
            "itemtype": "property",
            "name": "FILE_PATTERN",
            "type": "{RegExp}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 184,
            "description": "Determines the default behavior for interrupting other currently playing instances with the same source, if the\nmaximum number of instances of the sound are already playing.  Currently the default is <code>Sound.INTERRUPT_NONE</code>\nbut this can be set and will change playback behavior accordingly.  This is only used if {{#crossLink \"Sound/play\"}}{{/crossLink}}\nis called without passing a value for interrupt.",
            "itemtype": "property",
            "name": "defaultInterruptBehavior",
            "type": "{String}",
            "default": "none",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 197,
            "description": "Used internally to assign unique IDs to each SoundInstance",
            "itemtype": "property",
            "name": "lastID",
            "type": "{Number}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 207,
            "description": "The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\nSound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n{{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "activePlugin",
            "type": "{Object}",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 218,
            "description": "Determines if the plugins have been registered. If false, the first call to play() will instantiate the default\nplugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\nIf plugins have been registered, but none are applicable, then sound playback will fail.",
            "itemtype": "property",
            "name": "pluginsRegistered",
            "type": "{Boolean}",
            "default": "false",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 231,
            "description": "The master volume value. Use {{#crossLink \"Sound/getVolume\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}\nto modify the volume of all audio.",
            "itemtype": "property",
            "name": "masterVolume",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 242,
            "description": "The master mute value for Sound.  This is applies to all sound instances.  This value can be set through\n{{#crossLink \"Sound/setMute\"}}{{/crossLink}} and accessed via {{#crossLink \"Sound/getMute\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "masterMute",
            "type": "{Boolean}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 254,
            "description": "An array containing all currently playing instances. This helps Sound control the volume, mute, and playback of\nall instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}.\nWhen an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\nmethod. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/beginPlaying\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "instances",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 267,
            "description": "A hash lookup of sound sources via the corresponding ID.",
            "itemtype": "property",
            "name": "idHash",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 277,
            "description": "A hash lookup of preloading sound sources via the parsed source that is passed to the plugin.  Contains the\nsource, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\nand data.",
            "itemtype": "property",
            "name": "preloadHash",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 289,
            "description": "An object that stands in for audio that fails to play. This allows developers to continue to call methods\non the failed instance without having to check if it is valid first. The instance is instantiated once, and\nshared to keep the memory footprint down.",
            "itemtype": "property",
            "name": "defaultSoundInstance",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 301,
            "description": "This event that is fired when a file finishes loading internally. This event is fired for each loaded sound,\nso any handler methods should look up the <code>event.src</code> to handle a particular sound.",
            "itemtype": "event",
            "name": "loadComplete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "The source of the sound that was loaded. Note this will only return the loaded part of a\n delimiter-separated source.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id passed in when the sound was registered. If one was not provided, it will be null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Any additional data associated with the item. If not provided, it will be undefined.",
                    "type": "Number|Object",
                    "optional": true
                }
            ],
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 314,
            "itemtype": "method",
            "name": "sendLoadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "A sound file has completed loading, and should be dispatched.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 338,
            "description": "Register a Sound plugin. Plugins handle the actual playback of audio. The default plugins are\n({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}),\nand are installed if no other plugins are present when the user starts playback.\n\n<h4>Example</h4>\n    Sound.registerPlugin(HTMLAudioPlugin);\n\nTo register multiple plugins, use {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "registerPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether the plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 367,
            "description": "Register a list of Sound plugins, in order of precedence. To register a single plugin, use\n{{#crossLink \"Sound/registerPlugin\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n    Sound.registerPlugins([WebAudioPlugin, HTMLAudioPlugin]);",
            "itemtype": "method",
            "name": "registerPlugins",
            "params": [
                {
                    "name": "plugins",
                    "description": "An array of plugins classes to install.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Whether a plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 389,
            "description": "Initialize the default plugins. This method is called when any audio is played before the user has registered\nany plugins, and enables Sound to work without manual plugin setup. Currently, the default plugins are\n{{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initializeDefaultPlugins",
            "return": {
                "description": "If a plugin is initialized (true) or not (false). If the browser does not have the\n capabilities to initialize any available plugins, this will return false.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 414,
            "description": "Determines if Sound has been initialized, and a plugin has been activated.",
            "itemtype": "method",
            "name": "isReady",
            "return": {
                "description": "If Sound has initialized a plugin.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 425,
            "description": "Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\nor if the plugin supports a specific feature. Capabilities include:\n<ul>\n <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n <li><b>volume;</b> If the plugin can control audio volume.</li>\n <li><b>mp3:</b> If MP3 audio is supported.</li>\n <li><b>ogg:</b> If OGG audio is supported.</li>\n <li><b>wav:</b> If WAV audio is supported.</li>\n <li><b>mpeg:</b> If MPEG audio is supported.</li>\n <li><b>m4a:</b> If M4A audio is supported.</li>\n <li><b>mp4:</b> If MP4 audio is supported.</li>\n <li><b>aiff:</b> If aiff audio is supported.</li>\n <li><b>wma:</b> If wma audio is supported.</li>\n <li><b>mid:</b> If mid audio is supported.</li>\n <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1 if there is no known limit.</li>\n</ul>",
            "itemtype": "method",
            "name": "getCapabilities",
            "return": {
                "description": "An object containing the capabilities of the active plugin.",
                "type": "Object"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 454,
            "description": "Get a specific capability of the active plugin. See {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} for a\nfull list of capabilities.",
            "itemtype": "method",
            "name": "getCapability",
            "params": [
                {
                    "name": "key",
                    "description": "The capability to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value of the capability.",
                "type": "Number|Boolean"
            },
            "static": 1,
            "see": [
                "getCapabilities"
            ],
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 471,
            "description": "Register a sound to playback in Sound. It is recommended to register all sounds that need to be played back in order\nto properly prepare and preload them. Sound does internal preloading when required.\n\n<h4>Example</h4>\n    Sound.registerSound(\"myAudioPath/mySound.mp3|myAudioPath/mySound.ogg\", \"myID\", 3);",
            "itemtype": "method",
            "name": "registerSound",
            "params": [
                {
                    "name": "src",
                    "description": "The source or an Objects with a \"src\" property",
                    "type": "String | Object"
                },
                {
                    "name": "id",
                    "description": "An id specified by the user to play the sound later.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Data associated with the item. Sound uses the data parameter as the number of\n channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n for other information. The audio channels will set a default based on plugin if no value is found.",
                    "type": "Number | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "An object with the modified values that were passed in, which defines the sound. Returns false\n if the source cannot be parsed.",
                "type": "Object"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 548,
            "description": "Register a manifest of sounds to playback in Sound. It is recommended to register all sounds that need to be\nplayed back in order to properly prepare and preload them. Sound does internal preloading when required.\n\n<h4>Example</h4>\n    var manifest = [\n        {src:\"assetPath/asset0.mp3|assetPath/asset0.ogg\", id:\"example\"}, // Note the Sound.DELIMITER\n        {src:\"assetPath/asset1.mp3|assetPath/asset1.ogg\", id:\"1\", data:6},\n        {src:\"assetPath/asset2.mp3\", id:\"works\"}\n    ];\n    Sound.addEventListener(\"loadComplete\", doneLoading); // call doneLoading when each sound loads\n    Sound.registerManifest(manifest);",
            "itemtype": "method",
            "name": "registerManifest",
            "params": [
                {
                    "name": "manifest",
                    "description": "An array of objects to load. Objects are expected to be in the format needed for\n {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data, preload:UseInternalPreloader}</code>\n with \"id\" and \"data\" being optional.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "An array of objects with the modified values that were passed in, which defines each sound. It\n will return false for any values that the source cannot be parsed.",
                "type": "Object"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 578,
            "description": "Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\nnot completed preloading will not kick off a new internal preload if they are played.",
            "itemtype": "method",
            "name": "loadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The src or id that is being loaded.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the src is already loaded.",
                "type": "Boolean"
            },
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 596,
            "description": "Parse the path of a sound, usually from a manifest item. Manifest items support single file paths, as well as\ncomposite paths using <code>Sound.DELIMITER</code>, which defaults to \"|\". The first path supported by the\ncurrent browser/plugin will be used.",
            "itemtype": "method",
            "name": "parsePath",
            "params": [
                {
                    "name": "value",
                    "description": "The path to an audio source.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of path. This will typically be \"sound\" or null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "id",
                    "description": "The user-specified sound ID. This may be null, in which case the src will be used instead.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Arbitrary data appended to the sound, usually denoting the\n number of channels for the sound. This method doesn't currently do anything with the data property.",
                    "type": "Number | String | Boolean | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A formatted object that can be registered with the <code>Sound.activePlugin</code> and returned\n to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 634,
            "description": "Play a sound and get a {{#crossLink \"SoundInstance\"}}{{/crossLink}} to control. If the sound fails to play, a\nSoundInstance will still be returned, and have a playState of <code>Sound.PLAY_FAILED</code>. Note that even on\nsounds with failed playback, you may still be able to call SoundInstance {{#crossLink \"SoundInstance/play\"}}{{/crossLink}},\nsince the failure could be due to lack of available channels. If there is no available plugin,\n<code>Sound.defaultSoundInstance</code> will be returned, which will not play any audio, but will not generate\nerrors.\n\n<h4>Example</h4>\n    Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n    // wait until load is complete\n    Sound.play(\"myID\");\n    // alternately we could call the following\n    var myInstance = Sound.play(\"myAudioPath/mySound.mp3\", Sound.INTERRUPT_NONE, 0, 0, -1, 1, 0);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio.",
                    "type": "String"
                },
                {
                    "name": "interrupt",
                    "description": "How to interrupt other instances of audio. Values are defined as <code>INTERRUPT_TYPE</code>\n constants on the Sound class.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"none\""
                },
                {
                    "name": "delay",
                    "description": "The amount of time to delay the start of the audio in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "The point to start the audio in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "How many times the audio loops when it reaches the end of playback. The efault is 0 (no\n loops), and -1 can be used for infinite playback.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "The volume of the sound, between 0 and 1. Note that the master volume is applied\n against the individual volume.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "The left-right pan of the sound (if supported), between -1 (left) and 1 (right).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"SoundInstance\"}}{{/crossLink}} that can be controlled after it is created.",
                "type": "SoundInstance"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 672,
            "description": "Creates a {{#crossLink \"SoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\nsupported extension, a default SoundInstance will be returned that can be called safely but does nothing.",
            "itemtype": "method",
            "name": "createInstance",
            "params": [
                {
                    "name": "src",
                    "description": "The src of the audio.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"SoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n Unsupported extensions will return the default SoundInstance.",
                "type": "SoundInstance"
            },
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 706,
            "description": "Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.\nTo set individual sound volume, use SoundInstance {{#crossLink \"SoundInstance/setVolume\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The master volume value. The acceptable range is 0-1.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 728,
            "description": "Get the master volume of Sound. The master volume is multiplied against each sound's individual volume.\nTo get individual sound volume, use SoundInstance {{#crossLink \"SoundInstance/getVolume\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The master volume, in a range of 0-1.",
                "type": "Number"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 740,
            "description": "Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\nseparately and will override, but not change the mute property of individual instances. To mute an individual\ninstance, use SoundInstance {{#crossLink \"SoundInstance/setMute\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setMute",
            "params": [
                {
                    "name": "value",
                    "description": "Whether the audio should be muted or not.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute was set.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 764,
            "description": "Returns the global mute value. To get the mute value of an individual instance, use SoundInstance\n{{#crossLink \"SoundInstance/getMute\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getMute",
            "return": {
                "description": "The mute value of Sound.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 776,
            "description": "Stop all audio (global stop). Stopped audio is reset, and not paused. To play back audio that has been stopped,\ncall {{#crossLink \"SoundInstance.play\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 790,
            "description": "Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\ncontrol delays.",
            "itemtype": "method",
            "name": "playInstance",
            "params": [
                {
                    "name": "instance",
                    "description": "The {{#crossLink \"SoundInstance\"}}{{/crossLink}} to start playing.",
                    "type": "SoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "How this sound interrupts other instances with the same source.  Defaults to\n <code>Sound.INTERRUPT_NONE</code>. All interrupt values are defined as <code>INTERRUPT_TYPE</code>constants on Sound.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "none"
                },
                {
                    "name": "delay",
                    "description": "Time in milliseconds before playback begins.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "Time into the sound to begin playback in milliseconds.  Defaults to the\n current value on the instance.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "instance.offset"
                },
                {
                    "name": "loop",
                    "description": "The number of times to loop the audio. Use 0 for no loops, and -1 for an infinite loop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "The volume of the sound between 0 and 1. Defaults to current instance value.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "pan",
                    "description": "The pan of the sound between -1 and 1. Defaults to current instance value.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n have a delay will return true, but may still fail to play.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 842,
            "description": "Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "beginPlaying",
            "params": [
                {
                    "name": "instance",
                    "description": "A {{#crossLink \"SoundInstance\"}}{{/crossLink}} to begin playback.",
                    "type": "SoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "How this sound interrupts other instances with the same source. Defaults to\n <code>Sound.INTERRUPT_NONE</code>. Interrupts are defined as <code>INTERRUPT_TYPE</code> constants on Sound.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "none"
                },
                {
                    "name": "offset",
                    "description": "Time in milliseconds into the sound to begin playback.  Defaults to the current value on\n the instance.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "loop",
                    "description": "The number of times to loop the audio. Use 0 for no loops, and -1 for an infinite loop.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "The volume of the sound between 0 and 1. Defaults to the current value on the instance.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "pan",
                    "description": "The pan of the sound between -1 and 1. Defaults to current instance value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "instance.pan"
                }
            ],
            "return": {
                "description": "If the sound can start playing. If there are no available channels, or the instance fails to\n start, this will return false.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 875,
            "description": "Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\ninstead.",
            "itemtype": "method",
            "name": "getSrcById",
            "params": [
                {
                    "name": "value",
                    "description": "The ID the sound was registered with.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The source of the sound.  Returns null if src has been registered with this id.",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 892,
            "description": "A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\nSound management. It will be added again, if the sound re-plays. Note that this method is called from the\ninstances themselves.",
            "itemtype": "method",
            "name": "playFinished",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance that finished playback.",
                    "type": "SoundInstance"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 910,
            "description": "A function proxy for Sound methods. By default, JavaScript methods do not maintain scope, so passing a\nmethod as a callback will result in the method getting called in the scope of the caller. Using a proxy\nensures that the method gets called in the correct scope.\nNote arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example<h4>\n    myObject.myCallback = Sound.proxy(myHandler, this, arg1, arg2);\n\n#method proxy",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope to call the method name on",
                    "type": "Object"
                },
                {
                    "name": "arg",
                    "description": "Arguments that are appended to the callback for additional params.",
                    "type": "Mixed",
                    "optional": true,
                    "multiple": true
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Sound",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 960,
            "description": "The source of the channel.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 968,
            "description": "The maximum number of instances in this channel. -1 indicates no limit",
            "itemtype": "property",
            "name": "max",
            "type": "{Number}",
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 976,
            "description": "The default value to set for max, if it isn't passed in.  Also used if -1 is passed.",
            "itemtype": "property",
            "name": "maxDefault",
            "type": "{Number}",
            "default": "100",
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 985,
            "description": "The current number of active instances.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 993,
            "description": "Initialize the channel.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum number of instances in the channel",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1002,
            "description": "Get an instance by index.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "The index to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The SoundInstance at a specific instance.",
                "type": "SoundInstance"
            },
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1013,
            "description": "Add a new instance to the channel.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add.",
                    "type": "SoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1030,
            "description": "Remove an instance from the channel, either when it has finished playing, or it has been interrupted.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove",
                    "type": "SoundInstance"
                }
            ],
            "return": {
                "description": "The success of the remove call. If the instance is not found in this channel, it will\n return false.",
                "type": "Boolean"
            },
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1048,
            "description": "Get an available slot depending on interrupt value and if slots are available.",
            "itemtype": "method",
            "name": "getSlot",
            "params": [
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "The sound instance that will go in the channel if successful.",
                    "type": "SoundInstance"
                }
            ],
            "return": {
                "description": "Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n an existing SoundInstance may be interrupted. If there are no slots, this method returns false.",
                "type": "Boolean"
            },
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1097,
            "description": "A hash of channel instances indexed by source.",
            "itemtype": "property",
            "name": "channels",
            "type": "{Object}",
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1106,
            "description": "Create a sound channel. Note that if the sound channel already exists, this will fail.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the channels were created.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1124,
            "description": "Add an instance to a sound channel.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add to the channel",
                    "type": "SoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n for details on interrupt modes.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1142,
            "description": "Remove an instance from the channel.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove from the channel",
                    "type": "SoundInstance"
                }
            ],
            "return": {
                "description": "The success of the method call. If there is no channel, it will return false."
            },
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1159,
            "description": "Get the maximum number of sounds you can have in a channel.",
            "itemtype": "method",
            "name": "maxPerChannel",
            "return": {
                "description": "The maximum number of sounds you can have in a channel.",
                "type": "Number"
            },
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\Sound.js",
            "line": 1170,
            "description": "Get a channel instance by its src.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "src",
                    "description": "The src to use to look up the channel",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "SoundChannel",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 45,
            "description": "The source of the sound.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 55,
            "description": "The unique ID of the instance. This is set by <code>Sound</code>.",
            "itemtype": "property",
            "name": "uniqueId",
            "type": "{String} | Number",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 65,
            "description": "The play state of the sound. Play states are defined as constants on <code>Sound</code>.",
            "itemtype": "property",
            "name": "playState",
            "type": "{String}",
            "default": "null",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 74,
            "description": "The plugin that created the instance",
            "itemtype": "property",
            "name": "owner",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 84,
            "description": "How far into the sound to begin playback in milliseconds. This is passed in when play is called and used by\npause and setPosition to track where the sound should be at.\n\nNote: this is converted from milliseconds to seconds for consistency with the WebAudio API.",
            "itemtype": "property",
            "name": "offset",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 97,
            "description": "The volume of the sound, between 0 and 1.\nUse <code>getVolume</code> and <code>setVolume</code> to access.",
            "itemtype": "property",
            "name": "volume",
            "type": "{Number}",
            "default": "1",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 108,
            "description": "The length of the audio clip, in milliseconds.\nUse <code>getDuration</code> to access.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 119,
            "description": "The number of play loops remaining. Negative values will loop infinitely.",
            "itemtype": "property",
            "name": "remainingLoops",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 129,
            "description": "A Timout created by <code>Sound</code> when this SoundInstance is played with a delay. This allows SoundInstance\nto remove the delay if stop or pause or cleanup are called before playback begins.",
            "itemtype": "property",
            "name": "delayTimeoutId",
            "type": "{timeoutVariable}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 140,
            "description": "Determines if the audio is currently muted.\nUse <code>getMute</code> and <code>setMute</code> to access.",
            "itemtype": "property",
            "name": "muted",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 151,
            "description": "Determines if the audio is currently paused.\nUse <code>pause()</code> and <code>resume()</code> to set.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 162,
            "description": "The pan of the sound, between -1 (left) and 1 (right). Note that pan does not work for HTML Audio.\nUse <code>getPan</code> and <code>setPan</code> to access.",
            "itemtype": "property",
            "name": "pan",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 173,
            "description": "NOTE this only exists as a <code>WebAudioPlugin</code> property and is only intended for use by advanced users.\nA panNode allowing left and right audio channel panning only. Connected to our <code>WebAudioPlugin.gainNode</code>\nthat sequences to <code>context.destination</code>.",
            "itemtype": "property",
            "name": "panNode",
            "type": "{AudioPannerNode}",
            "default": "null",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 184,
            "description": "NOTE this only exists as a <code>WebAudioPlugin</code> property and is only intended for use by advanced users.\nGainNode for controlling <code>SoundInstance</code> volume. Connected to <code>panNode</code>.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "default": "null",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 194,
            "description": "NOTE this only exists as a <code>WebAudioPlugin</code> property and is only intended for use by advanced users.\nsourceNode is our audio source. Connected to <code>gainNode</code>.",
            "itemtype": "property",
            "name": "sourceNode",
            "type": "{AudioSourceNode}",
            "default": "null",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 204,
            "description": "The event that is fired when a sound is ready to play.",
            "itemtype": "event",
            "name": "ready",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 212,
            "description": "The event that is fired when playback has started successfully.",
            "itemtype": "event",
            "name": "succeeded",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 220,
            "description": "The event that is fired when playback is interrupted. This happens when another sound with the same\nsrc property is played using an interrupt value that causes this instance to stop playing.",
            "itemtype": "event",
            "name": "interrupted",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 229,
            "description": "The event that is fired when playback has failed. This happens when there are too many channels with the same\nsrc property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\nthe sound could not be played, perhaps due to a 404 error.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 239,
            "description": "The event that is fired when a sound has finished playing but has loops remaining.",
            "itemtype": "event",
            "name": "loop",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 247,
            "description": "The event that is fired when playback completes. This means that the sound has finished playing in its\nentirety, including its loop iterations.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 256,
            "description": "A helper method that dispatches all events for SoundInstance.",
            "itemtype": "method",
            "name": "sendEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The event type",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 271,
            "description": "Clean up the instance. Remove references and clean up any additional properties such as timers.",
            "itemtype": "method",
            "name": "cleanup",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 282,
            "description": "The sound has been interrupted.",
            "itemtype": "method",
            "name": "interrupt",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 295,
            "description": "Play has failed, which can happen for a variety of reasons.",
            "itemtype": "method",
            "name": "playFailed",
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 307,
            "description": "Play an instance. This method is intended to be called on SoundInstances that already exist (were created\nwith the Sound API {{#crossLink \"createInstance\"}}{{/crossLink}}, or have completed playback, and need to\nbe played again.\n\n<h4>Example</h4>\n    var myInstance = Sound.createInstance(mySrc);\n    myInstance.play(Sound.INTERRUPT_NONE);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "interrupt",
                    "description": "How this sound interrupts other instances with the same source. Interrupt values\n are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}. The default value is <code>Sound.INTERRUPT_NONE</code>.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "none"
                },
                {
                    "name": "delay",
                    "description": "The delay in milliseconds before the sound starts",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "How far into the sound to begin playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "The number of times to loop the audio. Use -1 for infinite loops.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "The volume of the sound, between 0 and 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "The pan of the sound between -1 (left) and 1 (right). Note that pan does not work for HTML Audio.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 330,
            "description": "Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\nsrc is loaded, otherwise playback will fail.",
            "itemtype": "method",
            "name": "beginPlaying",
            "params": [
                {
                    "name": "offset",
                    "description": "How far into the sound to begin playback, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "loop",
                    "description": "The number of times to loop the audio. Use -1 for infinite loops.",
                    "type": "Number"
                },
                {
                    "name": "volume",
                    "description": "The volume of the sound, between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "pan",
                    "description": "The pan of the sound between -1 (left) and 1 (right). Note that pan does not work for HTML Audio.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 345,
            "description": "Pause the instance. Paused audio will stop at the current time, and can be resumed using\n{{#crossLink \"SoundInstance/resume\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n    myInstance.pause();",
            "itemtype": "method",
            "name": "pause",
            "return": {
                "description": "If the pause call succeeds. This will return false if the sound isn't currently playing.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 359,
            "description": "Resume an instance that has been paused using {{#crossLink \"SoundInstance/pause\"}}{{/crossLink}}. Audio that\nhas not been started may not resume when this method is called.",
            "itemtype": "method",
            "name": "resume",
            "return": {
                "description": "If the resume call succeeds. This will return false if called on a sound that is not paused.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 370,
            "description": "Stop playback of the instance. Stopped sounds will reset their position, and calls to {{#crossLink \"SoundInstance/resume\"}}{{/crossLink}}\nmay fail.",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "If the stop call succeeds.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 381,
            "description": "Set the volume of the instance. You can retrieve the volume using {{#crossLink \"SoundInstance/getVolume\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n     myInstance.setVolume(0.5);\n\nNote that the master volume set using the Sound API method {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}\nwill apply on top of the instance volume.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The volume to set, between 0 and 1."
                }
            ],
            "return": {
                "description": "If the setVolume call succeeds.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 398,
            "description": "Internal function used to update the volume based on the instance volume, master volume, instance mute value,\nand master mute value.",
            "itemtype": "method",
            "name": "updateVolume",
            "return": {
                "description": "if the volume was updated.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 410,
            "description": "Get the volume of the instance. The actual output volume of a sound can be calculated using:\n\n    instance.getVolume() x Sound.getVolume();",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The current volume of the sound instance."
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 422,
            "description": "Mute and unmute the sound. Muted sounds will still play at 0 volume. Note that an unmuted sound may still be\nmuted depending on the Sound volume, instance volume, and Sound mute.",
            "itemtype": "method",
            "name": "mute",
            "params": [
                {
                    "name": "value",
                    "description": "If the sound should be muted.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute call succeeds.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 439,
            "description": "Get the mute value of the instance.\n\n<h4>Example</h4>\n    var isMuted = myInstance.getMute();",
            "itemtype": "method",
            "name": "getMute",
            "return": {
                "description": "If the sound is muted.",
                "type": "Boolean"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 452,
            "description": "Get the position of the playhead in the instance in milliseconds.",
            "itemtype": "method",
            "name": "getPosition",
            "return": {
                "description": "The position of the playhead in the sound, in milliseconds.",
                "type": "Number"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 462,
            "description": "Set the position of the playhead in the instance. This can be set while a sound is playing, paused, or even stopped.\n\n<h4>Example</h4>\n    myInstance.setPosition(myInstance.getDuration()/2); // set audio to it's halfway point.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to place the playhead, in milliseconds.",
                    "type": "Number"
                }
            ],
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 475,
            "description": "Set the left/right pan of the instance. Note that {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}} does not\nsupport panning, and only simple left/right panning has been implemented for {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\nThe default pan value is 0 (center).",
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "value",
                    "description": "The pan value, between -1 (left) and 1 (right).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the setPan call succeeds.",
                "type": "Number"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 488,
            "description": "Get the left/right pan of the instance. Note in WebAudioPlugin this only gives us the \"x\" value of what is\nactually 3D audio.",
            "itemtype": "method",
            "name": "getPan",
            "return": {
                "description": "The value of the pan, between -1 (left) and 1 (right).",
                "type": "Number"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\SoundInstance.js",
            "line": 499,
            "description": "Get the duration of the instance, in milliseconds. Note in most cases, you need to play as sound using\n{{#crossLink \"SoundInstance/play\"}}{{/crossLink}} or the Sound API {{#crossLink \"Sound.play\"}}{{/crossLink}}\nmethod before it's duration can be reported accurately.",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "The duration of the sound instance in milliseconds.",
                "type": "Number"
            },
            "class": "SoundInstance",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 6,
            "description": "WebAudioPlugin's SoundInstance implementation.",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 28,
            "description": "Clean up the instance. Remove references and clean up any additional properties such as timers.",
            "itemtype": "method",
            "name": "cleanup",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 232,
            "description": "The source of the sound to load. Used by callback functions when we return this class.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 240,
            "description": "The decoded AudioBuffer array that is returned when loading is complete.",
            "itemtype": "property",
            "name": "result",
            "type": "{AudioBuffer}",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 249,
            "description": "The callback that fires when the load completes. This follows HTML tag naming.",
            "itemtype": "property",
            "name": "onload",
            "type": "{Method}",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 257,
            "description": "The callback that fires as the load progresses. This follows HTML tag naming.",
            "itemtype": "property",
            "name": "onprogress",
            "type": "{Method}",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 265,
            "description": "The callback that fires if the load hits an error.",
            "itemtype": "property",
            "name": "onError",
            "type": "{Method}",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 274,
            "description": "Begin loading the content.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "src",
                    "description": "The path to the sound.",
                    "type": "String"
                }
            ],
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 293,
            "description": "The loader has reported progress.",
            "itemtype": "method",
            "name": "handleProgress",
            "params": [
                {
                    "name": "loaded",
                    "description": "The loaded amount.",
                    "type": "Number"
                },
                {
                    "name": "total",
                    "description": "The total amount.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 309,
            "description": "The sound has completed loading.",
            "itemtype": "method",
            "name": "handleLoad",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 321,
            "description": "The audio has been decoded.",
            "itemtype": "method",
            "name": "handleAudioDecoded",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 334,
            "description": "Errors have been caused by the loader.",
            "itemtype": "method",
            "name": "handleError",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioLoader",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 386,
            "description": "The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\nneed to be created within this context.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 395,
            "description": "A DynamicsCompressorNode, which is used to improve sound and prevent audio distortion according to\nhttp://www.w3.org/TR/webaudio/#DynamicsCompressorNode. It is connected to <code>context.destination</code>.",
            "itemtype": "property",
            "name": "dynamicsCompressorNode",
            "type": "{AudioNode}",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 404,
            "description": "A GainNode for controlling master volume. It is connected to <code>dynamicsCompressorNode</code>.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 412,
            "description": "A hash used internally to store ArrayBuffers, indexed by the source URI used  to load it. This prevents\nhaving to load and decode audio files more than once. If a load has been started on a file, <code>arrayBuffers[src]</code>\nwill be set to true. Once load is complete, it is set the the loaded ArrayBuffer instance.",
            "itemtype": "property",
            "name": "arrayBuffers",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 423,
            "description": "Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\nNote that WebAudio provides a <code>WebAudioLoader</code> instance, which <a href=\"http://preloadjs.com\">PreloadJS</a>\ncan use to assist with preloading.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the audio",
                    "type": "String"
                },
                {
                    "name": "instances",
                    "description": "The number of concurrently playing instances to allow for the channel at any time.\n Note that the WebAudioPlugin does not manage this property.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A result object, containing a \"tag\" for preloading purposes.",
                "type": "Object"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 442,
            "description": "Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\nor has already finished loading.",
            "itemtype": "method",
            "name": "isPreloadStarted",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 454,
            "description": "Checks if preloading has finished for a specific source. If the source is defined (but not === true), then\nit has finished loading.",
            "itemtype": "method",
            "name": "isPreloadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to load.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 466,
            "description": "Remove a source from our preload list. Note this does not cancel a preload.",
            "itemtype": "method",
            "name": "removeFromPreload",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 477,
            "description": "Add loaded results to the preload hash.",
            "itemtype": "method",
            "name": "addPreloadResults",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                },
                {
                    "name": "result",
                    "description": "The reload result.",
                    "type": "AudioBuffer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 489,
            "description": "Handles internal preload completion.",
            "itemtype": "method",
            "name": "handlePreloadComplete",
            "access": "private",
            "tagname": "",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 499,
            "description": "Internally preload a sound. Loading uses XHR2 to load an array buffer for use with WebAudio.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to load.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "Not used in this plugin.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 514,
            "description": "Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "src",
                    "description": "The sound source to use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A sound instance for playback and control.",
                "type": "SoundInstance"
            },
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 533,
            "description": "The capabilities of the plugin. This is generated via the <code>\"WebAudioPlugin/generateCapabilities</code>\nmethod.",
            "itemtype": "property",
            "name": "capabilities",
            "type": "{Object}",
            "default": "null",
            "static": 1,
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 544,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js",
            "line": 560,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "generateCapabiities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "WebAudioPlugin",
            "module": "xc.createjs.soundjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 48,
            "description": "Defines the default suffix map for CSS tweens. This can be overridden on a per tween basis by specifying a\ncssSuffixMap value for the individual tween. The object maps CSS property names to the suffix to use when\nreading or setting those properties. For example a map in the form {top:\"px\"} specifies that when tweening\nthe \"top\" CSS property, it should use the \"px\" suffix (ex. target.style.top = \"20.5px\"). This only applies\nto tweens with the \"css\" config property set to true.",
            "itemtype": "property",
            "name": "cssSuffixMap",
            "type": "Object",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 61,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 68,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 80,
            "itemtype": "method",
            "name": "init",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 98,
            "itemtype": "method",
            "name": "step",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\CSSPlugin.js",
            "line": 107,
            "itemtype": "method",
            "name": "tween",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "CSSPlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 27,
            "itemtype": "method",
            "name": "linear",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 33,
            "description": "Identical to linear.",
            "itemtype": "method",
            "name": "none",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 40,
            "description": "Mimics the simple -100 to 100 easing in Flash Pro.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "amount",
                    "description": "A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 57,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowIn",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease)."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 70,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease)."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 83,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowInOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease)."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 99,
            "itemtype": "method",
            "name": "quadIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 105,
            "itemtype": "method",
            "name": "quadOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 111,
            "itemtype": "method",
            "name": "quadInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 117,
            "itemtype": "method",
            "name": "cubicIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 123,
            "itemtype": "method",
            "name": "cubicOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 129,
            "itemtype": "method",
            "name": "cubicInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 135,
            "itemtype": "method",
            "name": "quartIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 141,
            "itemtype": "method",
            "name": "quartOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 147,
            "itemtype": "method",
            "name": "quartInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 153,
            "itemtype": "method",
            "name": "quintIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 159,
            "itemtype": "method",
            "name": "quintOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 165,
            "itemtype": "method",
            "name": "quintInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 171,
            "itemtype": "method",
            "name": "sineIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 179,
            "itemtype": "method",
            "name": "sineOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 187,
            "itemtype": "method",
            "name": "sineInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 195,
            "description": "Configurable \"back in\" ease.",
            "itemtype": "method",
            "name": "getBackIn",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 208,
            "itemtype": "method",
            "name": "backIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 214,
            "description": "Configurable \"back out\" ease.",
            "itemtype": "method",
            "name": "getBackOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 227,
            "itemtype": "method",
            "name": "backOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 233,
            "description": "Configurable \"back in out\" ease.",
            "itemtype": "method",
            "name": "getBackInOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease."
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 250,
            "itemtype": "method",
            "name": "backInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 256,
            "itemtype": "method",
            "name": "circIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 264,
            "itemtype": "method",
            "name": "circOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 272,
            "itemtype": "method",
            "name": "circInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 283,
            "itemtype": "method",
            "name": "bounceIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 291,
            "itemtype": "method",
            "name": "bounceOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 307,
            "itemtype": "method",
            "name": "bounceInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 318,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticIn",
            "params": [
                {
                    "name": "amplitude",
                    "description": ""
                },
                {
                    "name": "period",
                    "description": ""
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 337,
            "itemtype": "method",
            "name": "elasticIn",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 343,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": ""
                },
                {
                    "name": "period",
                    "description": ""
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 362,
            "itemtype": "method",
            "name": "elasticOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 368,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticInOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": ""
                },
                {
                    "name": "period",
                    "description": ""
                }
            ],
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Ease.js",
            "line": 386,
            "itemtype": "method",
            "name": "elasticInOut",
            "static": 1,
            "class": "Ease",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 38,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 45,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 56,
            "itemtype": "method",
            "name": "init",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 69,
            "itemtype": "method",
            "name": "step",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 119,
            "itemtype": "method",
            "name": "tween",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js",
            "line": 138,
            "description": "Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "params": [
                {
                    "name": "data",
                    "description": "Data object you would pass to the \"guide:\" property in a Tween"
                },
                {
                    "name": "ratio",
                    "description": "0-1 Distance along path, values outside 0-1 are \"best guess\""
                },
                {
                    "name": "target",
                    "description": "Object to copy the results onto, will use a new object if not supplied."
                }
            ],
            "return": {
                "description": "The target object or a new object w/ the tweened properties",
                "type": "Object"
            },
            "static": 1,
            "class": "MotionGuidePlugin",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 41,
            "description": "Causes this timeline to continue playing when a global pause is active.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 49,
            "description": "Read-only property specifying the total duration of this timeline in milliseconds (or ticks if useTicks is true).\nThis value is usually automatically updated as you modify the timeline. See updateDuration for more information.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 58,
            "description": "If true, the timeline will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 66,
            "description": "Called, with a single parameter referencing this timeline instance, whenever the timeline's position changes.",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 74,
            "description": "Read-only. The current normalized position of the timeline. This will always be a value between 0 and duration.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "Object",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 83,
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 90,
            "itemtype": "property",
            "name": "_tweens",
            "type": "Array[Tween]",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 97,
            "itemtype": "property",
            "name": "_labels",
            "type": "Array[String]",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 104,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 111,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 118,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 125,
            "description": "Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the normal ticking system)\nand managed by this timeline. Adding a tween to multiple timelines will result in unexpected behaviour.",
            "itemtype": "method",
            "name": "addTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to add. Accepts multiple arguments."
                }
            ],
            "return": {
                "description": "Tween The first tween that was passed in."
            },
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 149,
            "description": "Removes one or more tweens from this timeline.",
            "itemtype": "method",
            "name": "removeTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to remove. Accepts multiple arguments."
                }
            ],
            "return": {
                "description": "Boolean Returns true if all of the tweens were successfully removed."
            },
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 171,
            "description": "Adds a label that can be used with gotoAndPlay/Stop.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "label",
                    "description": "The label name."
                },
                {
                    "name": "position",
                    "description": "The position this label represents."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 182,
            "description": "Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "o",
                    "description": "An object defining labels for using gotoAndPlay/Stop in the form  where time is in ms (or ticks if useTicks is true).",
                    "type": "LabelName:time"
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 192,
            "description": "Unpauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if useTicks is true) or label to jump to."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 203,
            "description": "Pauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if useTicks is true) or label to jump to."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 214,
            "description": "Advances the timeline to the specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if useTicks is true)."
                },
                {
                    "name": "actionsMode",
                    "description": "Optional parameter specifying how actions are handled. See Tween.setPosition for more details."
                }
            ],
            "return": {
                "description": "Boolean Returns true if the timeline is complete (ie. the full timeline has run & loop is false)."
            },
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 238,
            "description": "Pauses or plays this timeline.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (true) or played (false)."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 249,
            "description": "Recalculates the duration of the timeline.\nThe duration is automatically updated when tweens are added or removed, but this method is useful\nif you modify a tween after it was added to the timeline.",
            "itemtype": "method",
            "name": "updateDuration",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 264,
            "description": "Advances this timeline by the specified amount of time in milliseconds (or ticks if useTicks is true).\nThis is normally called automatically by the Tween engine (via Tween.tick), but is exposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if useTicks is true)."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 275,
            "description": "If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\ncorresponding frame label will be returned, or null if a matching label is not defined.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "A numeric position value or label string."
                }
            ],
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 288,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 298,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Timeline.js",
            "line": 306,
            "itemtype": "method",
            "name": "_goto",
            "access": "protected",
            "tagname": "",
            "class": "Timeline",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 66,
            "description": "Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using Ticker,\nthen setting this to true (the default) will cause this tween to be paused when <code>Ticker.setPaused(true)</code> is called.\nSee Tween.tick() for more info. Can be set via the props param.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "default": "false",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 77,
            "description": "If true, the tween will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Boolean}",
            "default": "false",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 86,
            "description": "Read-only. Specifies the total duration of this tween in milliseconds (or ticks if useTicks is true).\nThis value is automatically updated as you modify the tween. Changing it directly could result in unexpected behaviour.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 96,
            "description": "Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\nyou specify data by setting it to a property of pluginData with the same name as the plugin class.\n\n<h4>Example</h4>\n    myTween.pluginData.PluginClassName = data;\n\nAlso, most plugins support a property to enable or disable them. This is typically the plugin class name followed by \"_enabled\".<br/>\n\n<h4>Example</h4>\n    myTween.pluginData.PluginClassName_enabled = false;<br/>\n\nSome plugins also store instance data in this object, usually in a property named _PluginClassName.\nSee the documentation for individual plugins for more details.",
            "itemtype": "property",
            "name": "pluginData",
            "type": "{Object}",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 115,
            "description": "Called whenever the tween's position changes with a single parameter referencing this tween instance.",
            "itemtype": "property",
            "name": "onChange",
            "type": "{Function}",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 123,
            "description": "Called whenever the tween's position changes with a single parameter referencing this tween instance.",
            "itemtype": "event",
            "name": "change",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 129,
            "description": "Read-only. The target of this tween. This is the object on which the tweened properties will be changed. Changing\nthis property after the tween is created will not have any effect.",
            "itemtype": "property",
            "name": "target",
            "type": "{Object}",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 138,
            "description": "Read-only. The current normalized position of the tween. This will always be a value between 0 and duration.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "{Object}",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 147,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 155,
            "itemtype": "property",
            "name": "_curQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 162,
            "itemtype": "property",
            "name": "_initQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 169,
            "itemtype": "property",
            "name": "_steps",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 176,
            "itemtype": "property",
            "name": "_actions",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 183,
            "description": "Raw position.",
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 193,
            "description": "The position within the current step.",
            "itemtype": "property",
            "name": "_stepPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 203,
            "description": "Normalized position.",
            "itemtype": "property",
            "name": "_prevPos",
            "type": "{Number}",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 213,
            "itemtype": "property",
            "name": "_target",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 220,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 228,
            "description": "Queues a wait (essentially an empty tween).\n\n<h4>Example</h4>\n    //This tween will wait 1s before alpha is faded to 0.\n    Tween.get(target).wait(1000).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "wait",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if <code>useTicks</code> is true).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 245,
            "description": "Queues a tween from the current values to the target properties. Set duration to 0 to jump to these value.\nNumeric properties will be tweened from their current value in the tween to the target value. Non-numeric\nproperties will be set at the end of the specified duration.\n\n<h4>Example</h4>\n      Tween.get(target).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "to",
            "params": [
                {
                    "name": "props",
                    "description": "An object specifying property target values for this tween (Ex. <code>{x:300}</code> would tween the x\n property of the target to 300).",
                    "type": "Object"
                },
                {
                    "name": "duration",
                    "description": "Optional. The duration of the wait in milliseconds (or in ticks if <code>useTicks</code> is true).\n Defaults to 0.",
                    "type": "Number"
                },
                {
                    "name": "ease",
                    "description": "Optional. The easing function to use for this tween. Defaults to a linear ease.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 267,
            "description": "Queues an action to call the specified function.\n\n<h4>Example</h4>\n    // would call myFunction() after 1s.\n    myTween.wait(1000).call(myFunction);",
            "itemtype": "method",
            "name": "call",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call.",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "Optional. The parameters to call the function with. If this is omitted, then the function\n will be called with a single param pointing to this tween.",
                    "type": "Array"
                },
                {
                    "name": "scope",
                    "description": "Optional. The scope to call the function in. If omitted, it will be called in the target's scope.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 286,
            "description": "Queues an action to set the specified props on the specified target. If target is null, it will use this tween's\ntarget.\n\n<h4>Example</h4>\n    myTween.wait(1000).set({visible:false},foo);",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "The properties to set (ex. <code>{visible:false}</code>).",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "Optional. The target to set the properties on. If omitted, they will be set on the tween's target.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 302,
            "description": "Queues an action to to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\n<h4>Example</h4>\n    myTween.to({x:100},500).play(otherTween);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to play.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 316,
            "description": "Queues an action to to pause the specified tween.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to play. If null, it pauses this tween.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 328,
            "description": "Advances the tween to a specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                },
                {
                    "name": "actionsMode",
                    "description": "Optional parameter specifying how actions are handled (ie. call, set, play, pause):\n <code>Tween.NONE</code> (0) - run no actions. <code>Tween.LOOP</code> (1) - if new position is less than old, then run all actions\n between old and duration, then all actions between 0 and new. Defaults to <code>LOOP</code>. <code>Tween.REVERSE</code> (2) - if new\n position is less than old, run all actions between them in reverse.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true if the tween is complete (ie. the full tween has run & loop is false).",
                "type": "Boolean"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 388,
            "description": "Advances this tween by the specified amount of time in milliseconds (or ticks if <code>useTicks</code> is true).\nThis is normally called automatically by the Tween engine (via <code>Tween.tick</code>), but is exposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if <code>useTicks</code> is true).",
                    "type": "Number"
                }
            ],
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 400,
            "description": "Pauses or plays this tween.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (true) or played (false).",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 413,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 423,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 431,
            "itemtype": "method",
            "name": "_updateTargetProps",
            "params": [
                {
                    "name": "step",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 468,
            "itemtype": "method",
            "name": "_runActions",
            "params": [
                {
                    "name": "startPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "includeStart",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 497,
            "itemtype": "method",
            "name": "_appendQueueProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 530,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 543,
            "itemtype": "method",
            "name": "_addStep",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 557,
            "itemtype": "method",
            "name": "_addAction",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 568,
            "itemtype": "method",
            "name": "_set",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 581,
            "description": "Constant defining the none actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "NONE",
            "type": "Number",
            "default": "0",
            "static": 1,
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 591,
            "description": "Constant defining the loop actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "LOOP",
            "type": "Number",
            "default": "1",
            "static": 1,
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 601,
            "description": "Constant defining the reverse actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "REVERSE",
            "type": "Number",
            "default": "2",
            "static": 1,
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 611,
            "description": "Constant returned by plugins to tell the tween not to use default assignment.",
            "itemtype": "property",
            "name": "IGNORE",
            "type": "Object",
            "static": 1,
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 619,
            "itemtype": "property",
            "name": "_listeners",
            "type": "Array[Tween]",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 627,
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 635,
            "description": "Returns a new tween instance. This is functionally identical to using \"new Tween(...)\", but looks cleaner\nwith the chained syntax of TweenJS.\n\n<h4>Example</h4>\n    var tween = Tween.get(target);",
            "itemtype": "method",
            "name": "get",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. <code>{loop:true, paused:true}</code>).\n All properties default to false. Supported props are:\n <ul>\n   <li>loop: sets the loop property on this tween.</li>\n   <li>useTicks: uses ticks for all durations instead of milliseconds.</li>\n   <li>ignoreGlobalPause: sets the ignoreGlobalPause property on this tween.</li>\n   <li>override: if true, Tween.removeTweens(target) will be called to remove any other tweens with the same target.\n   <li>paused: indicates whether to start the tween paused.</li>\n   <li>position: indicates the initial position for this tween.</li>\n   <li>onChange: specifies an onChange handler for this tween. Note that this is deprecated in favour of the \"change\" event.</li>\n </ul>",
                    "type": "Object"
                },
                {
                    "name": "pluginData",
                    "description": "An object containing data for use by installed plugins. See individual\n plugins' documentation for details.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "override",
                    "description": "If true, any previous tweens on the same target will be removed. This is the same as\n calling <code>Tween.removeTweens(target)</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A reference to the created tween. Additional chained tweens, method calls, or callbacks can be\n applied to the returned tween instance.",
                "type": "Tween"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 668,
            "description": "Advances all tweens. This typically uses the Ticker class (available in the EaselJS library), but you can call it\nmanually if you prefer to use your own \"heartbeat\" implementation.",
            "itemtype": "method",
            "name": "tick",
            "static": 1,
            "params": [
                {
                    "name": "delta",
                    "description": "The change in time in milliseconds since the last tick. Required unless all tweens have\n <code>useTicks</code> set to true.",
                    "type": "Number"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether a global pause is in effect. Tweens with <code>ignoreGlobalPause</code> will ignore\n this, but all others will pause if this is true.",
                    "type": "Boolean"
                }
            ],
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 688,
            "description": "Removes all existing tweens for a target. This is called automatically by new tweens if the <code>override</code> prop is true.",
            "itemtype": "method",
            "name": "removeTweens",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to remove existing tweens from.",
                    "type": "Object"
                }
            ],
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 707,
            "description": "Indicates whether there are any active tweens on the target object (if specified) or in general.",
            "itemtype": "method",
            "name": "hasActiveTweens",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "Optional. If not specified, the return value will indicate if there are any active tweens\n on any target.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A boolean indicating whether there are any active tweens.",
                "type": "Boolean"
            },
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 721,
            "description": "Installs a plugin, which can modify how certain properties are handled when tweened. See the CSSPlugin for an\nexample of how to write TweenJS plugins.",
            "itemtype": "method",
            "name": "installPlugin",
            "static": 1,
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "An array of properties that the plugin will handle.",
                    "type": "Array"
                }
            ],
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        },
        {
            "file": "..\\src\\lib\\createjs\\tweenjs\\Tween.js",
            "line": 746,
            "description": "Registers or unregisters a tween with the ticking system.",
            "itemtype": "method",
            "name": "_register",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Tween",
            "module": "xc.createjs.tweenjs"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\src\\lib\\createjs\\soundjs\\Sound.js:389"
        },
        {
            "message": "Missing item type\nRemoves the child at the specified index from the display list, and sets its parent to null. You can also remove\nmultiple children, such as \"removeChildAt(2, 7, ...);\".\nReturns true if the child (or children) was removed, or false if any index was out of range.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\display\\Container.js:155"
        },
        {
            "message": "Missing item type\nReturns a clone of this Container. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent).",
            "line": " ..\\src\\lib\\createjs\\easeljs\\display\\Container.js:370"
        },
        {
            "message": "Missing item type\nReturns a clone of this Stage.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\display\\Stage.js:308"
        },
        {
            "message": "Missing item type\nReturns a clone of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js:72"
        },
        {
            "message": "Missing item type\nReturns a string representation of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMapFilter.js:81"
        },
        {
            "message": "Missing item type\nReturns a clone of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js:64"
        },
        {
            "message": "Missing item type\nReturns a string representation of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\AlphaMaskFilter.js:73"
        },
        {
            "message": "Missing item type\nReturns a clone of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js:205"
        },
        {
            "message": "Missing item type\nReturns a string representation of this object.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\BoxBlurFilter.js:214"
        },
        {
            "message": "Missing item type\nShortcut method to adjust brightness, contrast, saturation and hue.\nEquivalent to calling adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation), in that order.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:38"
        },
        {
            "message": "Missing item type\nAdjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\nPositive values will make the image brighter, negative values will make it darker.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:56"
        },
        {
            "message": "Missing item type\nAdjusts the contrast of pixel color.\nPositive values will increase contrast, negative values will decrease contrast.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:76"
        },
        {
            "message": "Missing item type\nAdjusts the color saturation of the pixel.\nPositive values will increase saturation, negative values will decrease saturation (trend towards greyscale).",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:108"
        },
        {
            "message": "Missing item type\nAdjusts the hue of the pixel color.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:132"
        },
        {
            "message": "Missing item type\nConcatenates (multiplies) the specified matrix with this one.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:159"
        },
        {
            "message": "Missing item type\nReturns a clone of this ColorMatrix.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:172"
        },
        {
            "message": "Missing item type\nReturn a length 25 (5x5) array instance containing this matrix's values.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:181"
        },
        {
            "message": "Missing item type\nCopy the specified matrix's values to this matrix.",
            "line": " ..\\src\\lib\\createjs\\easeljs\\filters\\ColorMatrix.js:189"
        },
        {
            "message": "Missing item type\nThe ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n{{#crossLink \"BitmapAnimation\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\nautomatically call {{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}},\nto the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\nThe ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\ngarbage collection.\n\n<h4>Example</h4>\n    var helper = new ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");",
            "line": " ..\\src\\lib\\createjs\\easeljs\\ui\\ButtonHelper.js:3"
        },
        {
            "message": "Missing item type\nHTMLAudioPlugin's SoundInstance implementation.",
            "line": " ..\\src\\lib\\createjs\\soundjs\\HTMLAudioPlugin.js:200"
        },
        {
            "message": "Missing item type\nA function proxy for Sound methods. By default, JavaScript methods do not maintain scope, so passing a\nmethod as a callback will result in the method getting called in the scope of the caller. Using a proxy\nensures that the method gets called in the correct scope.\nNote arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example<h4>\n    myObject.myCallback = Sound.proxy(myHandler, this, arg1, arg2);\n\n#method proxy",
            "line": " ..\\src\\lib\\createjs\\soundjs\\Sound.js:910"
        },
        {
            "message": "Missing item type\nWebAudioPlugin's SoundInstance implementation.",
            "line": " ..\\src\\lib\\createjs\\soundjs\\WebAudioPlugin.js:6"
        },
        {
            "message": "Missing item type\nDetermine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "line": " ..\\src\\lib\\createjs\\tweenjs\\MotionGuidePlugin.js:138"
        }
    ]
}